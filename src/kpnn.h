#ifndef KPNN_H
#define KPNN_H

#include <math.h>


// use net Pnet => 128x16x2 => opS /egS outputs
#define N_INPUTS   (64 * 2)
#define N_HIDDEN   (8)

int OUTPUT_BIAS = -15;
int HIDDEN_BIAS[N_HIDDEN] = {10, 8, 32, -6, 2, 29, 13, 5, };
int OUTPUT_WEIGHTS[N_HIDDEN] = {27, 13, 15, -33, 33, -19, -20, 19, };


int HIDDEN_WEIGHTS[N_INPUTS * N_HIDDEN] = {-1, -3, -1, 1, 0, -4, 2, 4, -21, -14, -3, -17, -11, -2, 10, 35, -14, -24, -10, -8, 6, 6, 16, 20, -17, -20, -16, -13, -1, 28, 10, 31, -20, -24, -30, -7, -10, 19, 15, 12, -37, -6, -14, 13, 6, -1, -22, -9, -16, -41, 12, -36, -5, 16, -17, -4, 2, 4, 1, -3, -3, 2, -4, 2, -2, 1, -1, 3, 1, 4, -4, -3, -3, 30, -27, -11, -4, -19, 13, 30, 5, -27, -3, -35, -30, -19, -3, 17, 7, 5, 6, -5, -15, -10, -3, 27, 9, 11, -13, -4, -5, -5, 12, 23, 6, 2, -5, -6, 8, 17, 24, 16, 7, 3, -18, 5, 57, 36, 21, 11, 0, -3, 2, 1, 4, 4, 2, 4, -2, 0, 0, 0, 0, -2, 2, 1, 3, 8, 6, 65, 2, 24, -13, -10, 4, 1, -9, -4, -9, 8, 1, -3, 6, 18, -5, 20, 21, 3, 12, -25, 2, -1, 0, -32, -19, -24, -17, -23, -21, 16, 67, 8, 95, 55, -14, 50, -10, -28, 83, 29, -16, 1, -34, -5, 4, 5, 0, -2, 5, -3, 2, -1, 1, -1, -3, 4, 3, 0, 4, 2, -5, 1, -39, -1, -6, -14, -14, -23, -35, -13, -15, -9, 33, 23, 3, 6, -5, 2, -14, 15, 41, 6, -11, -29, -18, -3, -9, 73, 25, -23, 18, 6, -4, -13, 99, 9, 3, -6, -5, -2, -4, 19, 8, -16, 65, -4, -4, 5, -4, 2, -3, 0, -2, 2, -3, 0, -2, 2, -3, -4, -4, -1, 2, 5, 24, 21, -10, 21, 1, 3, -3, -12, 16, 23, 11, -4, 8, -7, -0, -14, 21, 11, 23, -10, 7, -3, 5, -2, 34, 2, 54, -5, 1, -12, -12, 42, 15, 39, 77, -7, -8, 55, 43, 52, -33, 76, 7, -2, -21, 16, 1, -9, 0, -3, -1, 5, 1, 3, 3, 2, -4, -1, 0, 3, 2, -3, 0, 0, -0, 16, -10, 26, 26, 16, -11, 38, 5, -13, -4, 42, 38, 24, 15, -29, -5, -16, 36, 39, 7, 28, 7, -9, -10, -14, 1, 0, 5, -5, 16, 8, -3, 6, 7, 1, -19, 5, -17, 6, -5, 5, 38, -15, -15, -13, -19, -1, 2, 4, 2, -4, 1, 3, -4, 1, -1, 5, 5, 5, -2, -4, -4, 0, -6, -4, -11, -39, -57, -43, -10, 18, -12, -5, -20, -13, -2, -11, 8, 6, -5, -10, -1, 12, 22, -3, 22, 6, -3, -12, 0, 10, 16, 25, 20, 21, 10, -15, -46, -58, -8, 24, 23, 18, 7, 7, -25, -33, 6, 1, 26, -15, 0, 0, -2, -3, 0, 1, -3, -1, -4, 4, -1, 0, 3, 4, 1, 5, -22, 14, 46, 48, 29, 40, 40, 27, 0, -0, -15, 13, 40, 43, -6, 18, -26, -19, -9, 9, -0, -8, 2, -6, -15, -14, -17, -37, -16, 1, -2, 1, -15, -41, -20, -8, -1, 10, 2, -0, -16, -78, -19, -5, 1, 2, -1, -9, 1, -3, 4, -1, -4, -1, -4, 2, -2, -4, -4, 4, 4, -3, 2, -1, -3, -5, -0, -27, -8, -18, -6, -14, -5, -10, 9, -3, -0, -14, -17, -14, -11, -20, -7, 15, 0, -2, -8, -13, -33, -12, -9, -2, 17, 21, -3, -10, -37, -14, 8, -5, 37, 12, 6, -36, 17, -55, 39, 18, 21, -17, 4, 2, -4, 0, -3, 5, 5, 4, -2, 0, 1, -3, 1, -1, 2, -4, 4, -3, 3, 17, -8, -6, -12, -40, -41, -4, 1, 21, 33, 9, -19, 12, -13, 30, 11, 10, 10, 7, -2, -29, -9, -8, 17, 14, 1, 13, 4, -27, -23, -16, 16, 17, -0, 4, 13, -12, -15, -27, 14, 2, -8, -24, -0, 4, -20, -32, 3, 3, 0, -4, 5, -2, 2, 5, 2, 2, 3, -3, -1, 2, -3, 2, 8, -3, -5, 13, 20, 51, 31, -7, 9, -7, 32, 6, 9, -15, 15, 19, 7, 9, -8, 3, -2, -4, 7, 2, 9, 4, -36, -10, 20, -6, -21, 4, -5, -19, -33, -23, -10, -9, -17, -13, -16, -12, -30, 7, -11, -34, -6, -9, 0, 5, 5, 5, 3, 2, -2, 3, 4, 0, -3, 4, 4, -4, 3, -2, -32, 13, -43, 50, -29, 0, 30, -6, -29, -21, 53, 48, 20, -13, 9, -8, -17, -18, 11, 65, -5, 20, -11, -10, -23, -8, 11, 23, -1, -8, -3, -9, -14, -9, 5, -25, 0, -10, 16, -18, -15, -17, -2, -23, -9, 12, 8, -6, -3, -4, 4, -4, 2, -1, 2, -4, -4, 4, -4, 1, -4, 0, -1, 4, 4, -5, 27, -5, -18, -17, -10, 4, -5, -0, 19, -1, -1, 1, -3, 0, -7, -24, 9, -1, 8, 10, 11, -1, 5, -18, -7, 12, 20, 21, 16, -11, 7, -18, 3, 8, 5, 5, 12, -31, 14, 21, 11, 1, 26, 26, 41, -13, -2, 0, 0, 5, 1, -2, 1, -1, -1, 2, -3, 2, -4, 3, 1, 4, 20, 71, -32, -3, 1, 32, -42, -47, -0, 19, -20, -17, 62, -8, 38, 37, 22, -1, 39, 6, 9, -19, -14, -4, 14, 3, 26, 8, -3, -21, -11, -21, 28, 21, 9, 10, -14, 5, -2, -18, 23, 31, 7, 8, -3, 7, -4, -24, 0, 0, -1, -1, 1, 2, -1, -1, 5, -4, 4, -3, -2, -1, -4, 2, -8, -19, 6, -18, 7, 6, 5, -6, -23, -7, -20, -6, -5, -5, 4, -1, -17, -31, -6, 1, -13, -7, 8, -6, -19, -3, -25, 38, 10, 3, 7, 4, 94, -28, -5, 19, -3, 7, 37, 1, 98, 61, 29, 23, 2, 3, 2, 3, -1, -3, -2, -1, 2, 5, -2, -2, 0, -4, 3, 1, -4, -3, -1, 4, 2, 9, 56, 51, 12, -22, 43, 10, 3, 10, -46, 4, 67, 12, 8, 2, 17, 3, -23, -13, -0, 6, 7, 8, 11, -14, 29, -15, -4, 6, -6, 2, 24, -7, 21, -67, -14, 4, -9, -12, 20, -9, 1, 30, 1, -10, -8, -9, 4, 1, -1, 3, -4, 2, -3, 0, };


int sigmoid(int x){
    return round(1 / (1 + exp(-1 * x)));
}

#endif