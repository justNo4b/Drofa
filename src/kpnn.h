#ifndef KPNN_H
#define KPNN_H

#include <math.h>


// use net Pnet => 128x16x2 => opS /egS outputs
#define N_INPUTS   (64 * 2)
#define N_HIDDEN   (8)

double OUTPUT_BIAS = 2;
double HIDDEN_BIAS[N_HIDDEN] = {-262, -38, -329, -362, 364, 316, -291, 40, };
double OUTPUT_WEIGHTS[N_HIDDEN] = {-0, 2, 1, -1, 2, -1, -1, -1, };


double HIDDEN_WEIGHTS[N_INPUTS * N_HIDDEN] = {-38, -71, -268, -68, 56, -155, 219, 238, -40, 83, 283, 304, -163, 252, -179, -116, 35, 361, 229, 45, -347, 256, 98, -243, 209, -285, 92, -308, 237, -247, 166, -212, 75, -32, 119, 165, -163, 383, -339, 220, 78, 349, 134, 329, -178, -5, -229, 259, -75, 97, -101, -363, 365, 30, 254, 160, 128, 365, -107, -54, -292, -345, -226, -171, -3, 286, 53, -120, -87, 116, -313, 379, -306, -152, 275, -72, -113, 105, 222, 201, 233, 171, -95, 169, -238, -277, 374, 289, -297, -99, 271, 257, 404, -322, -310, -386, 5, 149, -96, 334, -143, -1, 295, -16, -91, -170, -76, 181, -11, -240, -364, -211, 274, -82, 26, 109, -290, -5, 2, -208, -75, 328, 82, -91, 384, 158, -61, -25, 335, 248, 326, 228, 292, 208, 223, -211, 72, -250, 12, -365, 367, 42, 257, -112, 356, 314, -392, -332, -77, -357, 276, -116, 389, -371, 179, 14, 178, -279, 393, -251, 26, -59, 383, -88, -262, 211, -263, -144, 29, -181, 350, -46, 259, 177, -83, -135, 109, 365, 389, 40, -380, -96, 311, 51, -41, -248, -337, 193, 320, 97, 362, -65, -344, 6, -109, 271, -174, -317, -249, 245, -110, -286, 263, 198, -68, 210, 116, 87, 183, 96, -247, 212, 67, 114, 334, 94, -87, 390, 338, -157, -269, 271, 167, -218, 349, 99, -347, 208, 191, 255, 61, 128, 358, 373, -70, 356, 180, 75, 38, -16, -206, 199, 268, -72, 379, 178, -398, -119, -182, 332, 122, -54, -132, 345, -222, 257, -294, 281, 72, 301, 135, 180, -317, -264, 147, -361, -313, 397, 130, 104, -396, -20, 331, 282, -38, 327, -275, -50, 225, -408, 339, -384, 388, 241, 337, -225, 102, -341, -339, -212, -1, -163, 3, -248, -40, -231, -188, 37, 203, 26, 233, 238, -377, 185, -208, -30, -218, 388, -10, -358, 376, 376, 133, 39, -91, -240, -137, -369, 292, -80, 272, 373, -193, -107, -263, 182, -288, -391, 288, 320, 32, 114, 170, -293, -62, 385, -265, -235, 4, -218, 263, 6, -208, -30, -368, 73, 135, -83, -245, -309, -140, 82, -332, 57, 19, -223, 297, -240, -214, 178, -311, -135, -102, -75, -23, -112, 339, 101, -312, -52, 286, 375, 13, 104, -397, -298, 261, -182, -323, -376, -88, 400, -245, -22, 83, 179, -171, -357, 10, 41, 244, 118, -44, 189, 79, 375, 162, 49, -263, 259, -357, 102, -137, -312, -193, -96, -179, -318, 112, -120, 151, -352, -108, -56, -336, 29, 186, -118, 95, -202, -11, 356, 308, 375, -196, 18, -21, 400, 132, 120, -88, -209, -169, 183, -100, 41, 179, 111, -199, -140, 66, 364, 361, 365, -72, -377, -358, -282, 361, -237, 367, -60, -273, 285, 349, -47, 355, -74, 386, 64, -332, -98, 244, -116, -319, -260, 29, 252, -69, -123, 177, 404, 276, -215, -9, 224, -214, 47, 15, 203, 184, -24, 205, -37, -132, 137, 334, 255, -312, 335, -74, 189, 267, 247, 135, -1, 33, -250, -142, 351, -330, 74, 4, 330, 267, 61, 190, 121, -295, -195, -64, -40, 187, -261, 342, 101, 290, -76, -35, 22, 307, 309, -172, 165, -210, 361, -224, 232, 162, -316, -129, 242, -176, 238, -174, -322, -77, -375, -149, -325, -199, 196, -325, 40, -32, 75, -268, 308, 392, 127, 378, -77, -319, -179, 169, -161, 229, -13, 121, -361, -301, 408, 287, -70, -100, 153, 4, -134, 161, -99, -55, 31, -314, 29, -313, -295, 151, -155, -385, -203, 15, 394, 139, -271, 234, 328, -366, -298, -80, 151, -259, 17, 134, 49, 347, 84, -215, 410, 346, 352, -92, -100, -16, -371, -31, -285, -281, -275, -398, 206, 375, 19, -181, 129, -209, 130, -301, -171, 236, 26, 390, 340, -357, -214, 13, 25, 276, -157, -301, 243, -202, -27, 184, -169, -348, 212, 397, 235, -9, -393, -319, -33, -321, 368, 129, -120, 97, 231, -237, -60, -143, -238, 330, 363, 382, 414, -348, 254, -156, -293, -263, -280, -259, -19, 389, 216, -204, 367, 85, -177, 33, -210, 188, -234, -251, 372, -314, 232, 213, -148, 223, 84, -20, -197, -348, -397, -183, 144, 265, -324, -131, 57, -226, -345, 59, 196, 265, 224, -199, 366, 86, 220, -253, -134, 366, -103, -176, -360, 191, 60, -129, 11, -247, -105, -141, 252, -93, 74, 9, 223, 151, 288, 299, -49, 334, -64, 201, -161, 214, 381, -197, -90, 229, 414, -176, -169, -83, -318, 323, 145, 149, 249, 204, -56, 198, -327, 242, -322, -217, -139, -49, -29, 168, 285, 320, 102, 263, -233, 343, 77, -249, 188, 2, 17, 187, 208, 249, 131, -66, -183, -134, -328, -344, 107, -349, 239, 188, 314, -10, 304, 175, -12, -99, -19, -141, 236, 123, -307, 383, 55, -200, 195, 292, 180, -187, 84, -335, 106, 273, -2, 316, -311, -288, 40, -128, 211, -144, -384, 106, -148, -33, -134, 212, -96, -124, 104, -266, 364, -165, 152, -346, -347, 372, 325, 239, 202, -384, -68, -112, 249, -42, 239, -5, -295, -154, 247, 302, -261, 261, -359, 4, 288, 370, 271, -219, -160, -376, -93, 253, -174, 95, 299, -125, -295, 204, 161, 320, 258, 152, -203, -256, -300, 102, 132, 274, -1, -24, -171, 124, 286, -137, 192, 198, 275, -311, 371, 167, -298, 340, 8, 362, 26, 335, -177, 117, 168, 64, -310, -377, -223, -138, -251, 321, -6, 270, 170, 371, 286, 17, -265, 163, -95, 302, -71, -254, 11, 313, -59, 109, 207, -48, -299, 264, -108, -46, -362, -376, 380, -325, 110, 206, -399, 228, 134, -11, -234, 362, -21, 107, -371, 115, -143, -71, -343, -169, 75, 76, -239, 50, 254, -384, -385, 383, 288, -84, -403, -7, -404, 42, 96, 123, -111, 123, -372, 70, -265, 252, -320, -234, -37, -293, 284, 236, 39, 351, -314, 172, -301, 288, -155, 375, 351, 329, 4, -126, -158, 21, 261, -137, 136, -372, 366, 56, 138, 27, -282, -74, -109, 246, 92, 256, 343, -382, -265, -375, 377, 253, -137, -324, 179, 84, 86, -249, -350, 131, -330, -111, 222, 11, -199, -47, 36, 222, -402, 229, -143, 190, 229, 175, 43, -73, -315, 2, -43, };
int sigmoid(int x){
    return round(1 / (1 + exp(-1 * x)));
}

#endif