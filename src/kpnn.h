#ifndef KPNN_H
#define KPNN_H

#include <math.h>


// use net Pnet => 128x16x2 => opS /egS outputs
#define N_INPUTS   (64 * 2)
#define N_HIDDEN   (8)

int OUTPUT_BIAS = -8;
int HIDDEN_BIAS[N_HIDDEN] = {14, 1, 0, -10, -49, 4, -1, 12, };
int OUTPUT_WEIGHTS[N_HIDDEN] = {-17, -24, 27, 28, 18, 27, -24, 19, };


int HIDDEN_WEIGHTS[N_INPUTS * N_HIDDEN] = {3, -4, 4, -3, 2, 3, 2, 4, -7, -5, 17, -26, -13, -12, -7, -12, -2, -7, 12, 8, -17, -1, -9, -16, -7, -12, 9, -0, 2, 20, 34, 15, 8, -30, -25, 14, 28, 41, 47, -6, -20, -35, -6, 1, 21, 56, 29, -15, 7, 26, -17, -36, 31, -20, 55, -20, -3, 1, 5, 5, 4, 1, -2, -3, 1, 3, 5, -1, 1, 0, -3, -1, -16, -5, 36, 14, 22, 76, 3, -27, 31, 6, -27, -11, 65, -21, -11, 12, 36, 12, 39, 11, 16, -11, -45, -12, 27, 32, 36, 32, 8, -15, -19, -54, 20, 67, 11, 5, 5, -4, 8, -31, 22, 42, 6, -8, -6, 13, -15, -36, -2, -1, -1, 4, 1, -2, -4, -1, 5, -1, 3, -4, 3, 1, 2, -2, 6, 6, -5, -13, 16, 18, -5, 35, 9, -16, -10, -29, -2, 13, 22, 36, 17, -24, -27, -22, 1, -6, 9, 23, 46, -5, -30, -12, -26, -22, 2, 18, -14, -65, 7, -8, -45, -9, -56, -39, 3, 69, -49, -34, -14, -6, -7, -46, 0, -1, -3, 3, 3, 0, 5, -1, 0, -3, 3, -4, 3, 0, -4, -2, -4, -3, -10, 27, 1, 7, 63, 2, -7, -14, -22, 4, 72, 76, -3, 18, -4, -12, -6, -34, 17, 76, 35, 58, -5, -8, -6, -25, 14, 29, 22, 23, -3, -3, -1, 48, -10, 12, 25, 30, -2, 60, 58, 40, 1, -6, 37, 32, -4, 5, -2, -4, 2, 1, 3, -1, 1, -1, 1, 3, -4, 3, 3, 1, -19, -9, 5, -57, 8, -39, -18, -7, -13, -31, 6, -21, 0, -39, -31, -15, -31, -52, -0, 23, 10, -12, -29, -21, -63, -14, -6, -2, 5, 11, -21, -26, -49, 1, 24, 18, 46, 4, 13, -35, -12, -25, 34, -13, 3, 2, -9, 1, -2, -4, -3, -3, -3, -4, -1, 2, 0, -1, -3, 2, -3, 4, 4, 2, -2, 28, 7, -2, 1, -36, -61, 97, 27, 20, 27, 23, 11, -2, 14, 31, 24, 4, 22, -3, -6, -50, -1, -5, 25, 18, 9, 16, 13, -41, -5, -3, 18, 13, 6, 3, 14, -14, -21, -24, 22, 24, 8, 0, 14, 11, -27, -36, 4, 4, 2, 1, 5, -3, 3, -2, 4, -1, 0, -3, 3, -3, 4, -1, -4, 8, 19, 38, 104, 83, 10, -18, 7, 3, 18, 30, 11, 3, 1, -11, 9, -7, -3, -19, -2, -14, -2, -15, 18, 7, -11, -22, -15, -19, -13, -13, 10, 9, 63, 73, -7, 20, -8, -24, 9, -7, 22, 26, -10, -10, -8, 13, 1, 5, 1, -4, -3, -3, -2, 2, -2, -1, 3, -2, -1, 5, -2, 4, 57, -53, -60, -43, -2, -51, -51, -22, 9, -6, 20, -43, -27, -51, -43, -18, 46, 18, 28, -46, -1, 12, -32, -4, 22, 33, 25, 37, 23, 16, 1, 5, 24, 40, 29, 2, 15, -4, -17, 21, 19, 53, 57, 31, 22, -29, 7, 36, -3, 5, -2, -1, -3, -4, 4, 1, -1, -3, -2, 3, 2, 1, 3, 2, -5, -5, 12, -8, -3, -20, -39, 5, -18, 19, -38, -5, -6, 19, -10, -12, -11, -17, 9, -31, 16, 23, 2, -11, 8, -15, -31, 17, 8, -12, 3, 4, -44, 23, 44, 21, 36, 9, 13, -17, 10, 39, 75, 9, 42, 54, 17, -37, 2, 5, 5, 1, -4, 0, 4, -1, -2, 1, -4, 1, 5, 3, 3, -3, -34, 15, 51, -17, -47, 12, 16, -22, -18, -13, -46, -13, 59, -2, -42, 4, 18, 23, -27, -12, 23, -21, 4, 23, 27, 19, 0, -61, -22, -11, -14, 2, 26, 31, 13, 29, -44, 2, -38, -10, 40, 31, -2, 54, 5, -1, -19, -8, 4, -2, 4, 0, 0, 1, 1, -2, -2, 3, 5, 3, 5, 3, 2, 4, -33, -13, 6, -31, -13, -8, 19, 37, -27, -29, -20, -2, -5, 17, 20, 27, -33, -24, -20, -17, -4, 64, 28, 31, -27, -20, -39, -19, -24, 26, 29, 5, -27, -11, -2, 30, 24, 16, -9, -10, -10, -46, 16, 60, -36, 13, -62, -3, -1, 1, -4, 2, 0, 5, -2, -4, 5, 0, 1, 0, -1, 2, 3, -4, -2, 56, -26, -13, -15, -23, 7, 24, 18, -66, -4, -36, -41, -33, 2, 27, 30, 40, 21, -7, -15, -3, 13, 28, 14, 17, -17, -8, 8, 0, 17, 12, 11, 8, -18, -11, 16, 26, 60, 17, 15, 5, -20, 80, 78, 50, 27, 10, 1, -2, -1, 0, -2, -3, -1, 2, -4, 1, -1, 2, 0, 5, 5, 5, 28, 16, 15, 17, 53, -31, -9, 41, 26, 27, 21, 13, 21, 10, -1, 7, 22, 26, 20, 11, 35, 10, -24, -18, 44, 19, 22, -49, -6, 0, 8, -25, 28, 32, -45, -51, -6, -23, 29, -4, -85, 39, -71, -42, 17, -3, -33, -12, 2, -1, 0, -4, 0, -1, 1, 4, 3, 3, 3, 4, 2, 1, 4, 4, -4, 106, 80, 40, -4, 19, 32, 7, -12, -11, -17, 20, 35, -24, -4, -26, -22, -10, 53, 13, 21, -29, -1, -25, -21, -13, 4, 12, 31, -6, 6, 8, -19, -2, -19, 66, -10, 21, -1, 14, -13, -5, 38, -31, -24, 27, 35, 12, 0, -2, 3, 5, 4, -1, 5, 5, 4, 3, 4, 4, -3, -1, 4, -4, 30, 35, -5, 37, 25, 26, -5, -31, 25, 37, -9, -11, -21, 20, -8, -27, 23, 41, 13, -6, -8, 10, -15, -22, 15, 36, 35, 4, -15, -23, -6, -14, -1, 20, 62, -12, 9, 1, 77, 18, 86, -14, 80, 50, -9, -40, -41, 20, 4, 5, 4, -4, -4, 2, 4, 5, -2, 0, 4, -4, 4, 5, 3, 3, 9, -27, 10, 19, 34, -46, 11, -3, -37, 4, -28, 69, 34, 49, 42, -46, -4, -14, 28, 35, 63, 24, 21, 2, -4, -11, 27, 52, 19, -4, 20, -14, -5, 19, 37, 9, -13, 11, -2, -9, 0, 26, 67, -15, -17, -16, -6, -15, 2, -2, -1, -2, -1, -2, -3, 5, };

int sigmoid(int x){
    return round(1 / (1 + exp(-1 * x)));
}

#endif