#ifndef KPNN_H
#define KPNN_H

#include <math.h>


// use net Pnet => 128x16x2 => opS /egS outputs
#define N_INPUTS   (64 * 2 * 2)
#define N_HIDDEN   (8)

int OUTPUT_BIAS1 = -6;
int OUTPUT_BIAS2 = -8;
int HIDDEN_BIAS[N_HIDDEN] = {-3, -4, 4, -3, -3, 2, -1, -2, };
int OUTPUT_WEIGHTS1[N_HIDDEN] = {12, 35, -29, 52, 13, -18, 9, 31, };
int OUTPUT_WEIGHTS2[N_HIDDEN] = {7, 7, -1, 5, 8, -7, -15, 12, };


int HIDDEN_WEIGHTS[N_INPUTS * N_HIDDEN] = {
          -2, -1, 5, 3, 3, 0, 3, 1, 4, 1, -3, 2, 0, -3, -4, 4, 3, 2, -1, -2, 1, 1, 4, 5, 3, 2, -2, 1, 4, -0, 9, -4, 4,
          1, 4, -5, 1, -4, 15, -2, -8, 8, 0, -5, -2, 3, 2, -2, 3, -2, 7, -6, -5, -8, -5, -15, -4, 5, 5, 3, -2, 5, -1, 2, 2,
          2, -3, 2, 3, 5, -1, 2, 11, 3, 3, 7, 7, -2, -1, -3, -12, 11, 9, 2, 5, 5, -1, 2, -3, -1, 0, 5, 6, 0, -1, 0, -1,
          0, 0, 1, -0, 2, -2, 1, -1, -0, 4, 1, -3, -0, -0, -1, -1, 0, 0, 2, 1, -1, 2, 1, 2, 4, -3, 4, -4, 3, 1, -4, -4,
          -3, 0, 3, 9, 2, -1, -1, -3, -3, 2, 2, 5, -0, 4, -7, 9, -1, -3, 2, -1, -1, 0, -2, -1, -2, -3, 0, -1, -4, -18, -7, -6,
          1, -2, -1, 2, -4, -7, -3, 3, 8, 2, -2, 3, 1, 15, -2, 1, -0, 7, -1, 22, 4, 0, -1, 7, 2, 1, -1, -0, 9, 1, 1, -10,
          8, 9, 15, 13, -4, -3, -6, 10, 8, 14, -14, -11, 13, -1, -2, 5, 6, 12, 13, 2, -17, -2, -1, 24, 10, 15, 14, -11, -4, -5, 6, -5,
          -6, 7, 17, -1, -5, -4, 3, -3, 3, -4, -3, 1, -2, -2, -1, 2, -1, -9, -14, -3, -2, 1, 2, -5, -8, 5, -4, 1, -1, 3, 1, -1,
          0, 3, 3, 3, 4, 1, 4, -2, -1, 1, -5, -3, -4, -4, -1, -2, -2, 0, -0, -1, -2, -6, -3, -2, -2, 2, 2, 2, 1, -1, -4, -4,
          -0, 1, 2, 3, 5, -2, -2, 2, 4, 6, 3, 6, 4, 0, -12, 9, 10, 0, 4, 2, 3, -1, -5, -4, 5, 5, -4, -1, -4, -3, -3, 3,
          5, 0, 1, 0, 3, 5, -2, -3, 7, 6, -1, -6, -7, -5, -6, 3, 2, 3, 3, -12, -5, -3, -1, 5, 3, 4, -1, -1, -5, -5, -4, 4,
          4, -1, 3, -1, -4, -8, -3, 4, 4, 0, 2, 2, -0, -3, -4, 5, 5, 1, 3, 3, 3, -3, -5, 3, -1, 1, 4, 1, 3, 2, 3, 1,
          2, 2, -0, -6, -6, -3, -1, 4, 3, 1, 1, 0, 2, -4, -2, -0, 1, 3, 0, 4, 2, -0, -5, 6, 6, -3, -3, 1, -1, -1, -2, 4,
          4, 6, 1, 1, 2, -2, -4, 6, 3, 6, 3, 2, 5, -3, 1, 7, 11, 0, 7, -1, 5, 3, 7, 13, 5, 6, 0, 2, 9, -10, 3, 3,
          1, 7, 7, 7, 4, -0, 4, 2, -0, 6, 2, 3, 4, 2, -8, 8, 3, 3, 4, 1, 2, 3, 3, 5, 6, 7, -4, 2, 12, 1, 4, 1,
          4, 2, 2, 3, -3, 2, -2, -8, -2, -4, 0, 1, -3, 4, 2, -3, -4, -7, 0, -1, 7, 1, 2, -6, 9, -14, 4, -4, 0, 0, 3, 5,
          4, 3, -1, 5, -2, -2, -4, 2, 2, 0, 3, 6, -2, -4, 2, 2, 2, -1, -0, 2, 3, -1, 1, 3, 3, 0, 0, 1, -1, -3, -2, 2,
          1, 2, -5, -4, -4, 8, -3, 5, 7, 0, -3, -8, -6, -1, -3, -1, 3, 1, -0, -3, -5, -3, 4, 5, 2, -4, -1, 4, -2, -2, 5, -1,
          2, 4, 0, -2, -4, 2, 3, 9, 11, 3, -0, 12, 6, 5, -6, -7, -1, -0, 1, 5, 4, 2, -1, -2, -2, -2, -2, 7, 11, 2, 5, -3,
          -2, -1, -2, 1, 6, 1, 1, -5, -2, -1, 7, -2, 4, 2, 5, -4, -1, 0, 1, -1, 2, 8, 5, 1, 4, 5, 4, 0, 5, 0, 0, 10,
          8, 0, 8, 5, 0, -2, -1, -11, -1, 7, 0, 6, 2, -4, -2, 7, 3, 6, 1, -4, 5, 2, -0, 3, -0, 11, 2, 3, -1, 6, -1, -3,
          5, 11, 7, 0, 0, -2, 6, -1, 4, 4, 1, 3, -1, -6, 9, -6, -9, -3, -10, 2, 7, -7, -5, 2, -9, -5, 3, 2, 2, -6, -2, -1,
          1, 8, 4, -4, -6, -5, -6, -9, 5, 4, -3, -1, -7, -7, -4, 0, -1, -7, 5, -6, -10, -7, -6, 7, 2, 4, 5, -4, -8, -7, -11, 4,
          7, -8, -14, -5, -2, -11, -13, 0, 17, -9, 4, -0, -1, -1, -6, 5, 16, 8, 13, -2, 5, 0, -4, 6, 14, 15, -1, -1, -0, -1, -2, 2,
          0, 2, 0, -3, 3, 1, -4, -1, -2, -3, -0, 1, 3, 0, -1, -1, -2, -2, -1, 0, 0, -1, 0, -1, 0, -2, -1, -1, -1, -1, 0, 1,
          0, 1, -1, -2, -1, -1, 2, 2, 2, 2, 1, 1, 0, -0, 6, 2, 2, 2, 7, 3, 1, 2, 8, 2, -3, 4, -4, -1, -1, -4, -4, 0,
          0, 2, -1, -1, -1, 1, 5, -4, -7, -18, -1, -2, -13, 4, 7, -6, -4, -5, -2, -8, -0, -0, 3, -3, -2, -3, -1, -1, 2, 1, 3, -2,
          -3, -2, -3, 0, 2, 2, 4, -4, -4, -3, -1, 1, 0, 3, 3, -3, -4, -3, -4, 1, 0, 2, 3, 0, 4, -2, -1, 4, 1, -4, 2, -3,
          -7, -10, -3, -6, -4, 2, 2, -12, -5, -2, -4, -3, 1, 2, 2, -0, -5, -6, -7, -5, -4, 0, 2, -9, 3, 1, -9, -14, -3, 2, 2, -5,
          2, -1, -3, -3, 0, 2, 3, -1, -0, -5, -1, -0, 4, 4, 2, -7, 2, -4, 1, -1, 3, 6, -3, 2, 0, -0, -0, 1, -1, 3, 3, 4,
          3, 3, 6, 3, 6, -8, -9, 10, 6, 2, 3, 1, 3, -3, -11, 9, 4, 3, 4, 4, 1, -6, -12, 8, 2, 1, 6, 4, -1, -0, -2, 4,
          3, 2, 2, 2, 2, 0, 5, 3, 1, -4, 0, -2, -3, -2, -3, 3, 5, 5, 2, -3, -3, -6, -5, 8, 8, 7, 6, 5, 1, -1, 0, 4,
          -1, 4, 2, -4, -2, 1, 1, -0, 7, 2, 2, 2, 3, 0, -2, 0, 4, 0, 0, 3, 2, 1, -2, 1, 4, 2, -0, 2, 3, -2, 7, -2,
          2, 1, -5, -3, -2, 3, 1, 0, -4, -2, -3, -8, -5, 8, 8, -6, -11, 4, -4, -8, -13, -16, 3, -3, 2, -1, -2, 1, 3, 5, 4, -4,
          -1, -3, -1, -3, 4, -4, 4, -6, 5, 6, 5, 7, 14, -15, 12, 3, 9, 3, 6, 11, 1, -7, 13, 5, -1, -4, -4, -4, -1, 1, 3, -2,
          0, -2, -4, -3, 0, -0, 2, -2, -2, -3, -0, -1, 2, -3, 3, -2, -1, -1, -3, -0, -2, -2, 2, 3, -2, 3, 3, -1, 3, 3, 3, 3,
          4, -1, -2, 2, 3, -4, -5, -1, 1, 4, -3, 2, -2, -3, -5, 2, 3, 6, -2, -4, 5, -6, 3, 10, -9, 8, 1, -0, 9, 6, -2, -2,
          -8, 9, 6, 18, 4, 4, 3, -7, 7, 5, 16, 15, -7, -1, 2, 10, 4, 5, 13, 9, -5, -6, 4, 4, 2, 15, 0, 1, 4, -4, -3, -4,
          2, 2, -8, -4, 9, 6, 2, 1, 3, 2, 5, -16, -1, -2, -6, -0, -1, -1, -2, -2, -19, 1, 21, 6, 2, -3, 3, 8, -14, 6, 1, 3,
          9, -0, -3, -1, 3, 1, -3, 6, 4, 5, 2, -3, 3, 1, 0, 0, 1, 6, 6, -5, 1, 7, 2, -0, -14, -5, -9, 1, 4, 7, -2, 5,
          0, -4, -3, -2, 1, 3, -4, 3, 6, 1, 0, -1, 6, -0, -4, 4, 1, 2, -2, -1, 5, 2, -2, 4, 1, 4, 1, 1, 2, 9, -0, 4,
          5, 9, -6, -3, 4, 3, 1, 1, -1, 3, -0, -3, 4, -0, -2, 4, -3, 0, -5, 4, 0, -0, -7, 4, 2, 5, 1, -3, 5, -4, -4, 1,
          3, -3, 4, -2, -4, -4, -3, 12, -7, -8, 6, 6, -4, -2, 9, -1, 4, -0, 2, -8, 0, -4, 4, -1, -7, -3, -2, -2, 1, -4, 3, -2,
          3, -2, -2, -2, 4, -4, -3, -3, 1, -3, 4, 7, 1, 5, -5, -5, 5, 1, -4, -2, -0, 0, -4, 5, -2, -2, 2, 1, 0, -4, 4, 4,
          -1, 2, 1, 4, -2, -4, -2, -5, 1, 1, -8, 6, 2, 2, -3, -5, 4, -2, -0, 1, 5, 11, -5, 5, 1, 1, 3, -1, 1, -2, 9, -5,
          -9, 4, 2, 1, 13, 11, 8, 9, 0, 8, -7, 5, -5, 12, 3, -4, -6, -1, 14, -0, 3, -0, 11, -1, 4, -15, -8, -1, -3, 7, 4, -10,
          -16, -6, -5, -2, -4, 15, 11, -6, -6, 13, 12, 12, -5, 2, 16, -10, 17, 7, 11, -2, -3, 3, 0, -3, 6, -1, 14, 3, 6, 0, -1, -11,
          2, 3, 7, 1, -2, -5, 1, -2, 10, 9, 9, 6, -1, -2, -1, 2, 8, 5, -5, -1, 0, 2, 0, 9, 8, -3, 1, -1, 1, 5, 5, -3,
          5, -1, -1, -4, 0, -2, -2, 1, 2, 2, 4, 2, -1, -1, -3, -0, 2, 0, 3, 0, -2, -4, -2, 3, 2, 7, 3, 1, -0, -3, -3, 0,
          1, 4, 6, 1, -0, -2, -2, 1, -3, 8, 9, 5, 9, 8, 12, 3, 15, 3, 6, 4, 25, -15, -8, -4, -2, 4, -3, -3, 5, -4, 4, -3,
          0, 1, 2, -4, 1, -2, -2, 13, 14, 9, 6, -5, -0, 14, 18, 3, -1, -3, 1, -2, 1, 0, 13, 2, -1, 2, 2, -0, -10, 1, 2, 2,
          1, -1, -0, -0, -0, 1, 1, 2, 3, -0, -1, 2, 0, -2, -1, 3, 1, 2, -1, -1, 2, -4, -3, 2, -4, 3, -1, -3, 3, -2, 0, -4,
          2, 1, -11, 4, 0, 4, 6, 12, 6, 1, -3, -0, 3, 8, 6, 17, -2, -4, -3, -4, 3, 0, -3, 1, -1, -6, -10, -9, -7, -5, -6, -2,
          -12, -7, -8, -7, -19, -3, -4, 7, -12, -3, -15, -8, -3, -2, 0, 7, 11, 5, -3, -4, 1, 16, -11, 13, -0, 9, 4, 6, 6, -8, -3, 2,
          4, -3, 6, 16, 2, -6, -2, 7, -2, -1, -2, 4, 7, 4, -7, -4, -3, 8, 4, 0, -2, 6, -8, 2, -7, 3, 9, 21, 8, -4, 18, 5,
          6, 8, 9, 6, 6, 5, 8, 2, -1, 3, -3, 2, 1, -4, -4, 0, 4, -0, 6, -1, 1, -7, -7, 2, 3, 13, 7, -6, 4, -4, -4, -1,
          0, 4, 3, 1, 0, -3, 5, 3, 3, 3, 1, 2, 2, -1, -6, 4, 3, 2, 0, -3, 2, -2, -4, 3, 3, 2, 0, -3, -1, -3, -5, 3,
          2, 2, -1, -4, -5, -4, -5, 1, 7, 4, 3, 3, -3, 3, -3, -1, 5, 13, 1, -0, 1, -9, 1, -2, 1, 2, 2, 0, 4, -3, 2, 0,
          2, 1, 0, -3, -2, -1, 5, 4, 1, -1, -2, 2, -7, -4, -2, 1, -1, -0, 2, -0, 8, -0, -7, -1, 1, 2, -0, 7, 3, 1, 2, 2,
          2, 5, 6, 5, 3, 3, -1, 3, 5, 5, 3, 2, 2, 2, -0, 1, 6, 5, 4, -1, 1, 2, 1, 2, -2, -3, -2, -3, -1, -4, 3, -6,
          -4, -8, -4, -6, -3, -1, -1, -1, -1, -1, -3, -1, 1, 1, 4, -0, 3, -1, 8, 12, 6, 5, -6, -7, -1, 2, 4, 4, 3, 1, 7, -1,
          -5, 3, 2, -2, -1, 10, 16, 2, -2, 3, -2, 12, 8, 14, 9, 0, -6, 0, -0, 7, 17, 17, 4, -3, -2, 7, 6, 0, 2, 6, 0, 8,
          5, 5, 4, 6, -4, -7, -7, 12, 7, 7, -6, 2, -6, -12, -10, 6, 10, 5, 1, -12, -0, 0, -5, 12, 1, 3, 3, 6, 4, 0, -1, 4,
          3, 2, -0, 6, 5, 4, -2, 8, 2, 3, -1, 7, 4, -2, -2, -0, 3, 3, 3, 6, 4, 0, -2, -5, -1, 2, 4, 4, 3, -4, -2, };


int sigmoid(int x){
    return round(1 / (1 + exp(-1 * x)));
}

#endif