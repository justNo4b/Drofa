#ifndef KPNN_H
#define KPNN_H

#include <math.h>


// use net Pnet => 128x16x2 => opS /egS outputs
#define N_INPUTS   (64 * 2 * 2)
#define N_HIDDEN   (8)

int OUTPUT_BIAS1 = -3;
int OUTPUT_BIAS2 = 5;
int HIDDEN_BIAS[N_HIDDEN] = {-0, -4, 5, -3, -3, -3, 6, 3, };
int OUTPUT_WEIGHTS1[N_HIDDEN] = {-19, 38, -18, 18, 12, 13, 23, -13, };
int OUTPUT_WEIGHTS2[N_HIDDEN] = {3, -1, -7, -10, -22, 10, 8, -7, };


int HIDDEN_WEIGHTS[N_INPUTS * N_HIDDEN] = {
          -1, 1, 4, -4, 4, 5, 0, 4, 3, 1, -2, 0, -1, -0, -1, 0, 5, 6, 2, 2, 0, 1, 3, 3, -0, 1, -1, -1, 1, 2, 0, -1, -2, 
          -0, -4, -3, 1, 4, 1, 2, -3, -3, -4, -3, -1, 4, 4, 7, -6, -5, -9, -2, 0, -7, -5, -6, -3, -1, 4, 5, 0, 5, -3, 5, 5, 
          -2, -1, 2, 1, 1, 4, 1, 6, 6, 4, 1, 4, 6, 3, 8, 3, 4, 3, 3, -1, -2, 1, -7, 4, 7, 4, 3, -4, -3, -1, -1, 1, 
          5, 4, 3, -1, -3, -4, -4, -0, 3, 3, -0, -0, -4, -1, -3, 0, 4, 2, 1, -0, 1, -2, -2, -2, 4, -3, 1, 5, -4, 3, 5, 1, 
          1, 3, -2, 6, 7, 2, 6, 1, -1, 0, 2, 3, 4, 4, -3, -0, 2, -10, -6, -9, -3, -19, 7, 1, -9, -7, -1, -16, -15, -7, -0, -2, 
          -2, -6, -1, -4, -6, -9, 0, 7, -2, -9, -1, -7, 3, -4, 0, 4, 1, -3, -5, 3, 2, 2, -5, -1, -1, -3, -1, 6, -3, -3, -5, -1, 
          3, 1, -1, -1, 0, 2, 0, 0, -2, -2, 2, 1, 5, 5, 0, 1, 2, 3, 4, 0, -1, 5, -4, -1, 2, 4, 2, 3, 3, 8, 4, -0, 
          5, 10, 6, 12, 17, 10, 10, -3, -2, 4, 4, 14, 10, 10, 2, -5, -6, -4, -4, -4, -4, 3, 9, -2, -5, -6, 2, -3, -1, 2, 6, -3, 
          -4, 4, 2, -4, 0, -1, 5, -0, 2, 1, 1, 1, -3, -4, -0, -2, 1, 1, 0, -1, -1, 0, 1, 1, 3, 2, 2, -0, -1, -2, -1, 3, 
          3, 4, 4, 0, -2, -2, -3, 3, 6, 6, 3, 3, -4, -6, -7, -2, 5, 4, 5, 3, 4, 1, 4, 0, 3, 1, 1, 5, 3, 3, -2, 4, 
          0, 0, -2, 1, 1, 0, -3, 1, 0, -1, -1, -2, -6, -3, -7, 1, -4, -5, -6, -5, 4, 3, 3, -5, -3, -6, -4, -1, 3, 2, 4, -2, 
          -3, -2, -2, 1, 1, 1, 2, -0, -1, -2, -1, 1, 0, 1, 1, -0, -2, -2, -1, 1, 0, 0, 1, -3, 0, 0, 2, -2, -3, 3, -2, 1, 
          0, -1, 1, -7, -5, -2, -5, 2, 0, 1, -2, -5, -7, -9, -7, -1, 0, 8, 6, 12, 19, 1, -3, -8, 1, 6, 2, 2, 5, 8, -3, 7, 
          3, 9, 3, 2, 11, 5, -5, 4, 6, 4, 2, -3, 4, 6, -2, -5, 3, 3, 2, -1, 2, -6, -3, 2, 4, 3, 7, -2, 3, 2, -1, 4, 
          6, 5, 3, 3, 0, 5, 3, 8, 1, 3, 7, 5, 9, -0, 6, 3, -0, 2, 5, 6, -1, -5, 3, 8, 4, -2, 7, 3, -6, -9, -4, 5, 
          -7, -3, -5, -5, -8, -7, -3, 6, 8, -4, -2, -4, -4, -4, -3, 5, 5, 5, 6, 2, 0, -1, -2, 5, 6, 6, 1, 5, -2, -2, -0, -4, 
          3, -3, 2, 2, 3, 2, 0, -1, -1, -2, 1, 1, 3, -1, 2, -1, -3, -2, -0, 1, 1, -1, 3, -2, -2, -2, -1, -3, -2, -2, -0, -0, 
          -0, 0, -3, -5, -4, -3, -2, 2, 2, -2, -4, -5, -4, -2, 5, -2, -2, -3, -4, -5, -1, 1, 8, 1, 0, -2, -2, -1, -1, -4, -2, 0, 
          -1, 1, -1, -2, 0, -4, 0, -4, -0, -2, 1, 7, 1, 1, 0, -4, -3, -1, 3, 5, 4, 3, -2, -4, -4, -4, -1, 5, 8, 6, 1, -3, 
          -3, -3, -3, 1, 5, 5, 4, -2, -4, -2, 0, 1, 3, 3, 5, -3, -2, -1, 2, -4, 1, 3, 8, 5, 4, 1, -2, -1, 1, 5, -4, 7, 
          2, 4, 6, 10, 2, 4, 1, -3, 0, -0, 2, -3, 3, 1, -0, -3, -1, 2, -4, 1, -0, 1, 0, -2, -6, -4, -2, -0, -1, -1, 6, -1, 
          -6, -4, -3, 0, 1, 2, 1, -1, -4, -7, -1, 2, 2, 1, 3, 5, 6, -0, 1, -1, -2, -5, 3, 2, 3, 1, -1, -2, -6, -1, 5, -10, 
          0, 5, 2, 0, -4, -0, 1, -1, 3, 5, -7, -8, -1, -6, -2, 6, 3, 4, -11, -8, -6, -4, -7, 3, 10, 1, 4, -4, 9, -2, -7, 4, 
          1, 2, 3, 6, 5, 1, -4, 4, 1, 3, 1, -2, 2, -0, -1, 6, 5, 3, 0, -2, 1, -2, -1, 2, 8, 7, 2, -5, 0, -3, -6, 1, 
          3, 4, -2, 1, -3, 2, -1, 0, -3, -3, 0, 0, -3, -3, -0, 0, 1, -7, -1, 0, -0, -1, -1, 1, 3, 1, -9, -2, -2, -1, -2, 2, 
          1, -0, 4, -5, -1, -2, -0, -0, 2, 4, 2, 2, -2, 5, -5, 13, 9, 11, 5, 6, 4, 0, 13, 3, 3, 2, -2, -3, -3, -4, -1, -3, 
          -3, 2, -2, -3, 2, -1, -4, -13, -8, -13, -8, -9, -8, -3, -8, 3, -8, -9, -2, 1, 3, 0, 3, -3, -1, -3, -5, 2, -0, 3, 0, -3, 
          -1, -0, 0, 1, 2, 1, 1, -2, -1, 3, 2, 1, 0, 3, 4, -2, -0, 2, 1, 1, 2, 5, 2, -2, 4, 4, -1, 5, -1, 4, -3, 0, 
          -0, -2, 3, -2, -3, 0, -2, -0, -0, -0, -1, 4, -0, 0, 4, 6, 4, 4, 7, 7, 6, 7, 1, 5, 6, 6, 5, 6, 4, 7, 13, 4, 
          3, -4, 5, 7, -3, -4, 2, 3, 2, 5, 7, 9, 6, -1, 5, 8, 3, 1, 6, 5, 6, -2, 6, 6, 9, 10, -1, -5, 6, 8, 3, -7, 
          3, -7, -2, -3, -8, 3, 3, -9, 2, -7, -10, -2, -5, -0, -7, 2, -6, -6, -11, -10, -3, -3, -6, 5, -5, -3, -3, -3, -3, -4, -3, -2, 
          -6, -3, -4, -4, -2, -7, -5, -2, -2, -3, -6, -8, -8, -15, -16, -1, -0, -1, 4, -3, 1, 2, -3, 1, 4, 3, -6, 2, 7, -0, 1, -3, 
          -2, -2, 0, -3, -4, -3, 0, -1, 1, -2, -2, -1, -4, -2, -4, -0, -0, -1, -1, -2, -3, -3, -5, 1, -0, -1, -1, -2, -3, -3, -5, 2, 
          0, 1, 0, -3, -2, -5, -4, -3, 5, 2, -1, -3, 1, 3, -5, 9, 8, 6, 4, 5, 10, 3, 4, -3, 1, -3, 1, 2, -3, 5, 5, 0, 
          3, -1, 2, 0, 5, 2, 0, -8, -3, -3, 1, -2, -2, -2, 1, 1, -3, 0, -2, 1, 1, 1, 1, -5, -0, 2, 1, 2, 2, 2, 2, 1, 
          1, 1, 4, 2, 2, 2, 3, 1, 1, 3, -1, 1, 2, 3, 4, 2, 1, 3, 0, 1, 5, 2, 3, -1, -3, -1, 4, 4, 2, 4, -1, 5, 
          -5, -5, 7, 8, -3, -1, 19, 1, -1, -2, -2, -1, -3, -3, -2, -0, 0, 1, -1, -1, -3, -3, -3, 1, 2, -0, -2, -2, -3, -4, -3, 1, 
          1, 1, 2, -1, -0, -2, -0, 1, 1, -5, 5, 5, 1, 1, 6, 8, -3, 3, 4, 3, 4, 2, 7, 9, 3, 5, 1, 2, 1, 3, 4, -9, 
          -0, -12, 2, -2, 2, -5, -4, -7, -5, -2, -5, 2, 0, 2, -3, -1, -0, 1, -8, -1, 0, 0, -2, -1, -0, 1, 2, 1, 1, 0, 0, 1, 
          0, 2, 2, 2, 1, -0, -10, 3, 1, 1, 1, 0, 1, -5, -2, 1, 2, 1, 1, -1, 0, -2, -6, -3, 4, 4, -7, -9, 6, 1, -5, 4, 
          1, -2, 1, 3, 3, -1, -3, 4, 2, 2, 2, -0, 3, 1, -1, 3, 4, 2, 1, 1, 3, 1, 0, 4, 4, 3, 2, 1, 1, 2, 1, 1, 
          3, 3, 4, 2, 2, 2, 2, 0, 5, 5, 3, 2, 4, 2, 0, 2, 8, 8, 6, 3, 2, -4, 4, -4, 4, -3, -3, -3, 4, -4, -3, 1, 
          0, 1, 5, -3, -3, 3, 2, 1, -2, -1, -5, -6, -3, 4, 11, -2, -0, -1, -2, -2, -9, 15, -3, -1, -2, -1, 0, -2, -1, -3, -7, -1, 
          -1, -1, 2, -1, -2, -3, -4, -1, 0, 2, 0, -2, -2, -1, -1, 1, 2, 4, -0, -0, -2, -1, -0, 4, 5, -4, 1, -3, -3, 4, 1, -6, 
          -3, -6, -2, -6, -3, 1, -0, 3, 6, -1, 3, 1, 0, -1, -0, 8, 6, 6, 5, 2, -0, -1, -2, 3, 6, 5, 5, 4, 5, 0, -6, 5, 
          3, 7, 4, 2, 1, 1, 0, 1, 5, 3, 3, 2, 3, 4, -0, -7, 4, 3, 3, 1, 2, 4, -4, -6, 3, 1, -2, 3, 2, -0, 1, 9, 
          3, -1, -4, 5, -1, 6, 6, 3, 0, -1, 10, 3, 2, 1, 8, 1, -1, 0, 3, 4, -0, -1, 2, 0, -2, -1, -1, -3, -3, -1, -1, 4, 
          -0, -1, -1, -2, -5, -8, -3, 2, -1, -1, -4, -5, -6, -6, -4, -3, 8, -1, -2, -1, -4, -3, -2, 2, 8, 9, -0, 13, 9, -1, 14, 4, 
          2, 3, 2, 1, 1, 0, 4, -1, -1, -0, 1, -3, -2, -1, 3, 0, -1, -0, 0, 0, -1, -1, 2, 1, 0, -0, 0, -0, 1, 1, 2, 10, 
          -0, 2, 0, 1, -1, -0, 0, -6, 5, -0, 3, 2, -2, -1, 0, -3, 0, -2, 1, 9, 5, 8, 3, 2, 0, 4, 5, -1, -1, 3, -4, 1, 
          -3, -4, -2, -4, 5, 1, -3, 2, -5, -1, -4, -2, -5, -3, 0, -1, -5, -6, -6, -4, -1, 1, 3, -3, -3, -4, -4, -3, -1, 0, 1, -3, 
          -4, -3, -1, -2, -0, 2, -1, 0, -3, -1, -2, -0, -0, -0, -3, -1, -2, -3, -1, -0, 5, 4, -2, 3, -2, 4, -3, 2, 1, -4, -4, -1, 
          -3, -2, 7, -2, 2, 2, -1, 2, -1, 1, 2, 1, 1, 1, 2, -5, -1, 4, 3, 2, 2, 4, 2, 2, 4, 4, -0, 11, 7, 6, 3, 8, 
          2, -2, -1, 3, 5, 4, 4, -9, -2, -4, -5, -5, 1, 1, -1, -8, -5, -6, -4, 1, -3, 2, -16, -2, -3, -6, 0, -3, -5, -1, 1, 6, 
          -4, 1, -5, 1, -2, 1, -1, 5, -4, -5, -2, 0, -5, -6, 7, 3, -2, -5, -4, -3, -5, -6, -3, -3, -5, -4, -4, -5, -4, -5, 6, 4, 
          -4, -5, -5, -5, -6, -4, 4, 3, -1, -4, -4, -6, -5, -1, 3, -1, -2, -2, -2, -4, 7, 6, 4, -0, -2, -0, -1, 13, 5, 4, 2, -3, 
          2, 5, 4, 3, -1, 5, 1, -1, 2, 4, 1, -2, -5, 1, 1, -3, 1, 2, 3, -2, -4, 1, -2, -1, 0, 1, 1, 1, -3, -2, -1, 2, 
          -1, 1, 5, -0, 3, 4, -2, -1, 1, 1, -3, 4, -5, 7, 0, -4, -2, -2, -1, 1, -6, 6, 9, 4, -1, 2, -1, 4, 4, -2, -4, -4, 
          4, 5, -1, -3, -1, -4, -4, 10, 10, 10, 1, -2, 3, -6, -9, -3, -1, 3, 1, -3, 4, 1, 0, -2, -1, -1, 0, 1, -0, -2, -2, 5, 
          2, 2, -1, -2, 0, -0, -1, 4, 4, 3, 0, -2, 5, -2, -1, 5, 2, 1, 5, 1, 2, 3, -3, 0, -3, 0, -3, 0, -2, 5, -1, 8, 
          13, 13, 10, 16, 3, -4, -1, 11, 7, 8, 6, -1, -4, -3, -1, -1, -2, 1, 1, -2, 1, 0, 6, 2, -5, -7, -4, -3, -0, 1, -4, -2, 
          -5, -2, 1, -0, 2, 2, 3, 6, -5, 4, 9, 7, 6, 3, 3, 4, -4, -5, 2, 3, 4, 1, 2, 10, -1, -5, 0, 9, -1, 7, 2, -1, 
          -2, -0, -1, 4, -2, -1, -3, -8, 7, -3, -5, -6, -7, -2, -7, 4, 6, -3, -4, -5, -2, -4, -4, 0, 6, 3, -7, -3, -4, -3, -3, 3, 
          9, 11, 1, -3, -0, 1, -1, 5, 7, 8, 4, 6, 5, 1, 0, 5, 7, 5, 4, 4, 1, -1, -1, -1, -3, -6, -7, -5, -5, -0, -2, };


int sigmoid(int x){
    return round(1 / (1 + exp(-1 * x)));
}

#endif
