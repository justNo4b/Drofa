#ifndef KPNN_H
#define KPNN_H

#include <math.h>


// use net Pnet => 128x16x2 => opS /egS outputs
#define N_INPUTS   (64 * 2 * 2)
#define N_HIDDEN   (8)

int OUTPUT_BIAS1 = -8;
int OUTPUT_BIAS2 = -9;
int HIDDEN_BIAS[N_HIDDEN] = {-4, -4, 3, -4, -3, 3, -1, -2, };
int OUTPUT_WEIGHTS1[N_HIDDEN] = {14, 41, -38, 62, 15, -21, 12, 37, };
int OUTPUT_WEIGHTS2[N_HIDDEN] = {9, 7, -0, 4, 11, -6, -18, 13, };


int HIDDEN_WEIGHTS[N_INPUTS * N_HIDDEN] = {
          -2, -1, 5, 3, 3, 0, 3, 1, 3, 2, -2, 2, -0, -2, -3, 5, 3, 2, -0, -2, 1, 1, 3, 6, 4, 1, -1, 0, 4, -1, 8, -3, 5,
          1, 4, -4, 2, -3, 16, -2, -4, 6, -3, -8, -6, 3, -1, -5, 2, -1, 9, -9, -12, -11, -8, -21, -4, 5, 5, 3, -2, 5, -1, 2, 2,
          2, -3, 2, 3, 5, -1, 2, 16, 1, 5, 5, 12, 1, 1, -1, -10, 12, 13, 4, 5, 7, -2, 4, -3, -2, -0, 4, 2, 0, 0, 1, -1,
          0, -0, 1, -1, 1, -2, 1, -2, -1, 2, 1, -1, 1, 0, -1, -2, -1, -1, -1, -0, -1, 2, 0, 2, 4, -3, 4, -4, 3, 1, -4, -6,
          -4, 1, 3, 8, 2, -1, -1, -3, -4, 0, 2, 4, 0, 5, -9, 7, -4, -2, 2, 1, -0, 0, 1, -2, -2, -3, 0, -3, -10, -20, -8, -5,
          1, -4, -2, 4, -4, -9, -7, 2, 9, 0, -0, 2, -1, 17, -5, -0, 0, 14, 0, 25, 1, 5, -1, 7, -2, -2, -5, -1, 12, 3, 2, -19,
          7, 15, 20, 21, -14, -6, -9, 9, 13, 22, -20, -10, 17, -1, -4, 6, 8, 15, 21, 0, -20, -4, -2, 31, 14, 20, 21, -14, -2, -9, 11, -7,
          -3, 4, 23, -1, -5, -4, 4, -3, 2, -4, -3, 0, -1, -2, -4, 1, 0, -9, -15, -1, 1, 1, 2, -5, -12, 6, -4, 1, -2, 2, 3, -1,
          0, 3, 3, 3, 4, 1, 4, -2, -1, 1, -1, -3, -4, -3, -2, -1, -2, 0, 0, -1, -2, -5, -4, -2, -3, 1, 2, 1, 0, -1, -4, -3,
          -0, 1, 1, 3, 4, -1, -2, 2, 4, 6, 3, 5, 5, -0, -13, 12, 11, 4, 3, 3, 4, 1, -7, -4, 5, 5, -4, -1, -4, -3, -3, 3,
          5, 0, 1, 0, 3, 5, -2, -1, 7, 5, -4, -7, -13, -11, -10, 2, 4, 3, 5, -15, -3, -3, -3, 5, 3, 4, -0, -0, -4, -5, -5, 5,
          4, -1, 2, -0, -3, -7, -3, 5, 4, 1, 3, 1, 1, -3, -4, 5, 5, 1, 4, 2, 3, -1, -5, 3, -1, 1, 4, 1, 3, 2, 3, 3,
          1, 2, 0, -5, -6, -4, -1, 3, 4, 3, 1, 1, 1, -4, -1, -1, 2, 1, -1, 2, 3, -2, -6, 7, 5, -3, -3, -2, -2, -2, -2, 7,
          3, 8, 1, 1, -0, -2, -3, 7, 2, 7, -0, 1, 4, -5, 0, 10, 12, 4, 5, -3, 5, -0, 7, 15, 8, 8, 3, 1, 8, -14, 4, 4,
          3, 10, 7, 8, 7, 3, 8, 2, -2, 6, 1, 4, 6, 4, -11, 8, -1, 0, 4, 3, 3, 3, 5, 4, 4, 6, -4, 3, 13, -3, 3, 0,
          6, -0, 0, 3, -3, 4, 2, -8, -1, -4, -0, -1, -1, 4, 2, -3, -4, -8, 0, -2, 4, 1, 2, -8, 7, -21, 5, -3, 1, 1, 2, 5,
          4, 3, -1, 5, -2, -2, -4, 2, 3, 1, 3, 4, -1, -4, 2, 2, 3, -0, -0, 2, 3, -1, 2, 3, 3, 0, -0, 1, -0, -3, -2, 5,
          2, 2, -5, -3, -5, 7, -4, 7, 5, 2, -2, -7, -5, -1, -3, -1, 3, 4, -2, -2, -5, -0, 5, 5, 2, -4, -1, 4, -2, -2, 5, -1,
          2, 4, 0, -2, -4, 2, 3, 9, 15, 5, 0, 14, 6, 5, -5, -7, -1, -0, 1, 5, 11, 2, 2, -3, -2, -2, -2, 10, 12, 2, 4, -4,
          -2, -2, -2, 0, 5, 1, 2, -5, -2, -2, 6, -2, 4, 3, 5, -4, -1, 0, -0, -0, 3, 8, 5, 1, 4, 5, 4, 0, 5, 0, 0, 13,
          5, 1, 5, 4, -1, -2, -1, -11, 5, 5, 1, 5, 2, -4, -3, 8, 4, 8, 1, -3, 7, -1, -1, 4, 2, 10, 3, 3, 1, 2, -1, -0,
          5, 10, 7, 1, 0, -1, 8, 3, 5, 4, 0, 8, -1, -10, 11, -11, -11, -1, -11, 0, 4, -3, -6, 7, -13, -6, 1, 4, -1, -8, -6, 1,
          3, 11, 7, -6, -8, -6, -7, -9, 7, 9, -1, -1, -7, -8, -6, 1, -1, -4, 5, -8, -11, -8, -5, 9, 5, 6, 6, -4, -9, -9, -12, 5,
          9, -11, -12, -7, -4, -12, -14, 6, 18, -8, 4, -3, -2, -1, -6, 9, 22, 9, 17, -3, 4, -0, -4, 9, 14, 15, -0, -1, -1, -1, -2, 2,
          0, 2, 0, -3, 3, 1, -4, -1, -2, -3, -0, 1, 2, 0, -1, -1, -2, -2, -1, -0, 0, -0, 0, -0, -0, -2, -1, -1, -1, -1, 1, 0,
          0, 1, -1, -2, -0, -1, 2, 3, 2, 3, 1, 2, -0, 1, 6, 2, 2, 1, 5, 3, 1, 3, 7, 2, -3, 4, -4, -1, -1, -4, -4, 0,
          0, 2, -1, -1, -1, 1, 5, -5, -6, -20, -1, -3, -14, 5, 7, -5, -3, -4, -1, -8, 1, -1, 4, -2, -2, -2, -1, -0, 2, 1, 3, -2,
          -2, -2, -2, 0, 2, 2, 4, -3, -3, -2, -1, 0, 0, 2, 3, -3, -3, -2, -3, 0, 0, 2, 3, 0, 4, -2, -1, 4, 1, -4, 2, -4,
          -6, -12, -3, -6, -4, 1, 2, -17, -8, 0, -3, -2, 0, 1, 2, -1, -5, -9, -8, -5, -3, -0, 1, -9, 3, 1, -7, -22, -3, 3, 2, -8,
          1, -1, -3, -3, -0, 2, 3, 0, -0, -8, -0, 0, 4, 4, 2, -7, 1, -2, 1, -3, 2, 5, -3, 6, 1, 1, 0, 2, 1, 0, 6, 4,
          3, 3, 7, 3, 9, -8, -9, 8, 6, 2, 3, 2, 4, -0, -10, 8, 4, 4, 3, 4, 1, -5, -13, 5, 3, 2, 4, 3, -0, -1, -3, 4,
          3, 2, 2, 2, 2, 1, 1, 3, 2, -4, 0, -1, -3, -3, -4, 4, 5, 5, 2, -2, -5, -5, -4, 7, 7, 5, 6, 5, 1, -1, 1, 4,
          -1, 4, 2, -4, -2, 1, 1, 0, 6, 2, 3, 1, 3, 2, -0, -0, 5, 1, 1, 4, 2, 2, -1, 1, 5, 2, 1, 1, 5, -0, 4, -3,
          3, 1, -1, -2, -0, -1, 1, -3, -4, -4, -3, -11, -7, 12, 7, -13, -15, 1, -3, -10, -12, -18, 4, -3, 2, -1, -2, 1, 3, 5, 4, -4,
          -1, -3, -1, -3, 4, -4, 4, -3, -1, 4, 9, 9, 14, -18, 17, 3, 6, 3, 4, 13, 1, -7, 15, 6, -2, -3, -4, -4, -0, 0, 3, -3,
          -2, -2, -4, -3, -2, 0, 0, -3, -3, -3, -1, -2, 0, -2, 3, -3, -3, -1, -2, 0, -3, -2, 2, 3, -2, 3, 3, -1, 3, 3, 3, 6,
          8, -1, -1, 1, 2, -3, -6, -3, -0, -2, -2, -1, -3, -4, -3, 5, 4, 1, -2, -3, -0, -6, -1, 17, -8, 6, -1, -1, 7, 6, -7, -2,
          -10, 3, 9, 27, 2, 5, 4, -5, 10, 6, 20, 20, -6, -2, 4, 11, 4, 9, 16, 15, -4, -4, 3, 9, 1, 18, -2, 1, 5, -10, -6, -4,
          4, 3, -7, -4, 15, 11, 3, 2, 3, 2, 8, -20, -6, 1, -6, -4, -3, -3, -6, -3, -26, 5, 24, 4, -1, -5, 5, 8, -26, 9, 2, 3,
          5, 2, -6, 1, 4, 3, -4, 7, 6, 4, 4, -1, 2, 3, 4, 5, -0, 5, 6, -2, 1, 7, 3, 4, -13, -5, -9, 1, 2, 6, -6, 5,
          0, -4, -3, -2, 1, 3, -4, 3, 6, 1, 2, -1, 6, 1, -4, 3, 3, 2, -1, 0, 4, 2, -2, 5, 2, 4, 1, 0, 3, 8, -1, 4,
          5, 9, -5, -2, 4, 2, 2, 2, 2, 2, 0, -3, 5, 1, -3, 2, -2, -2, -2, 3, -1, 0, -9, 4, 2, 5, 1, -3, 5, -4, -4, 1,
          3, -3, 4, -2, -4, -4, -3, 14, -7, -10, 5, 5, -8, -3, 12, -4, 5, -3, 6, -7, -1, -7, 1, -2, -7, -3, -2, -4, 1, -4, 2, -3,
          3, -2, -1, -1, 3, -3, -4, -4, 1, -3, 4, 6, 1, 5, -5, -5, 3, -0, -4, -2, -2, 1, -5, 5, -2, -2, 2, 1, 0, -4, 4, 4,
          2, 2, 1, 3, -2, -4, -4, -5, 2, -0, -5, 4, 2, 2, -4, -6, 3, -2, 1, 2, 3, 11, -6, 4, 2, 1, 5, -1, 2, -2, 9, -4,
          -11, 7, 4, 5, 18, 13, 10, 13, 6, 9, -6, 8, -4, 18, 1, -2, -8, -1, 20, -0, 4, 1, 12, -4, 5, -16, -11, -2, -3, 9, 5, -12,
          -19, -4, -2, 1, 1, 18, 13, -4, -8, 15, 13, 12, -5, 2, 18, -12, 22, 9, 16, -6, -3, 3, 2, -2, 3, -2, 16, 4, 5, -0, -3, -10,
          5, 9, 8, 2, -2, -4, 1, -4, 8, 10, 9, 5, -1, -1, -1, 3, 10, 4, -5, -2, -0, 2, -0, 12, 11, -3, 2, -0, 1, 5, 6, -3,
          5, -1, -1, -4, 0, -2, -2, 2, 2, 2, 4, 3, 1, -1, -3, 1, 2, 1, 2, 2, 0, -2, -3, 2, 2, 6, 3, 1, 1, -2, -3, 1,
          2, 5, 4, 1, 0, -3, -2, -0, -3, 7, 8, 11, 10, 10, 17, 2, 18, 4, 4, 6, 30, -24, -7, -4, -2, 4, -3, -3, 5, -4, 4, -3,
          0, 1, 2, -4, 1, -2, -2, 11, 9, 8, 4, -7, -3, 20, 26, 2, -0, -2, 1, -3, -3, 1, 22, 2, -1, -0, 0, -0, -10, 2, 2, 3,
          -0, -1, -0, -0, -0, 1, 0, 2, 2, -0, -2, -0, -0, -2, -1, 3, 1, 0, -1, -3, -0, -3, -3, 2, -4, 3, -1, -3, 3, -2, 0, -2,
          2, 0, -10, 5, 1, 5, 7, 16, 2, 0, -4, -2, 4, 9, 8, 15, -0, -5, -6, -3, 3, -2, -4, -1, -2, -5, -9, -14, -11, -4, -9, -3,
          -11, -7, -9, -7, -23, -2, -6, 7, -17, -3, -21, -7, -3, -3, 1, 7, 16, 8, -3, -5, 4, 15, -13, 16, 0, 16, 7, 8, 6, -10, 2, 3,
          4, -2, 5, 20, 1, -10, -2, 8, 1, -0, -1, 7, 6, 4, -11, 0, -1, 8, 4, 0, -2, 7, -13, 1, -3, 7, 11, 24, 15, -8, 19, 7,
          5, 9, 7, 11, 12, 11, 15, 4, 1, 3, -0, 1, -0, -5, -7, -0, 7, -3, 4, -1, -3, -6, -7, 2, 4, 12, 5, -6, 1, -4, -5, -1,
          0, 4, 3, 1, 0, -3, 5, 2, 2, 3, 0, 1, 2, -2, -6, 3, 3, 1, 0, -2, 1, -2, -5, 2, 2, 1, 0, -3, -2, -3, -6, 3,
          2, 2, -2, -4, -5, -3, -5, 0, 5, 3, 3, 3, -3, 1, -4, -0, 6, 16, 2, -1, 0, -8, 3, -2, 1, 2, 2, 0, 4, -3, 2, 0,
          2, 1, 0, -3, -2, -1, 5, 3, 1, -2, -1, -1, -7, -4, -2, 0, -2, -1, 1, 0, 1, 1, -6, -1, 1, 2, -0, 5, 3, 2, 1, 2,
          3, 5, 6, 4, 3, 4, -0, 3, 5, 4, 3, 2, 2, 2, 0, 2, 5, 4, 4, -0, 1, 2, 2, 2, -2, -3, -2, -3, -1, -4, 3, -6,
          -4, -7, -5, -6, -4, -1, -1, -1, 0, -1, -3, -1, 1, 1, 3, 1, 5, 0, 6, 11, 5, 5, -5, -7, -1, 1, 4, 3, 4, -0, 8, -2,
          -5, 3, 1, -5, 1, 9, 26, 2, -2, 2, -3, 16, 7, 13, 9, -3, -4, -1, -2, 5, 20, 20, 3, -3, -4, 4, 1, 1, -0, 10, 0, 8,
          4, 3, 1, 5, -4, -8, -9, 11, 7, 6, -4, 4, -7, -16, -10, 6, 12, 5, 3, -14, 0, -1, -5, 11, 2, 4, 3, 8, 4, 1, -1, 9,
          3, 4, 3, 6, 5, 1, -1, 8, 2, 3, -0, 6, 4, -2, -1, -1, 5, 1, 2, 4, 4, -1, -2, -4, -1, 1, 3, 4, 3, -3, -2, };


int sigmoid(int x){
    return round(1 / (1 + exp(-1 * x)));
}

#endif