#ifndef KPNN_H
#define KPNN_H

#include <math.h>


// use net KPnet => 264x8x2 => opS /egS outputs
#define N_INPUTS   (64 * 2 * 2)
#define N_HIDDEN   (8)

int OUTPUT_BIAS1 = 9;
int OUTPUT_BIAS2 = 10;
int OUTPUT_BIAS3 = 13;
int OUTPUT_BIAS4 = 6;
int HIDDEN_BIAS[N_HIDDEN] = {8, -1, -3, 2, 1, 9, 5, 1, };
int OUTPUT_WEIGHTS1[N_HIDDEN] = {27, 23, 12, -30, -8, -7, 17, -26, };
int OUTPUT_WEIGHTS2[N_HIDDEN] = {2, -7, 11, 8, -1, -13, -3, -9, };
int OUTPUT_WEIGHTS3[N_HIDDEN] = {12, 13, -48, -17, -20, -9, 17, -15, };
int OUTPUT_WEIGHTS4[N_HIDDEN] = {-37, -5, 9, -3, 60, -23, 23, 11, };


int HIDDEN_WEIGHTS[N_INPUTS * N_HIDDEN] = {
          -1, 3, 3, 0, -1, -4, 1, -4, -7, -7, -4, -8, -4, -5, 5, 13, -6, -9, -6, -3, -1, -1, 8, 8, -7, -8, -7, -2, -2, 4, 6, 6, -5,
          -7, -10, -1, -2, 4, 1, -1, -2, -2, -1, 6, 2, -12, -1, -8, -4, -9, 0, -5, 2, 0, 6, -2, -4, -2, 5, -2, -3, 0, 2, 3, 4,
          1, 2, -3, -4, 1, -3, -4, -8, 0, -4, 5, -7, -6, -3, -0, 3, -7, 1, -2, -1, -3, 1, 18, 5, 2, -1, -2, -9, -2, 1, 4, 1,
          5, -1, -5, -3, -1, 1, 5, 1, -1, -4, 1, 4, 4, 8, 5, 2, 0, -5, 4, 14, 9, 5, 4, -2, -2, 4, 3, 4, 5, 3, -4, 5,
          8, 16, 5, 1, -3, -6, -4, 21, 15, 10, 11, -1, -1, 2, -1, 2, 13, 1, 7, -2, -4, -5, -3, -0, -4, 2, -2, 4, 8, 3, -10, 4,
          7, 1, -1, 5, 6, -1, -11, 4, 14, 11, 16, 13, 3, -8, 2, 8, 12, -1, 9, 11, 12, 14, 2, -4, 13, 11, 8, 6, -7, 5, 7, -1,
          -4, 3, 15, -2, -1, -15, -13, -2, 3, 10, 0, -22, -4, -12, -16, -0, 2, -1, -4, -4, 5, -6, 14, 8, 9, 3, 4, 2, 5, 7, 6, 13,
          5, 4, 14, 0, -3, 4, 9, -7, -6, 2, -8, -7, 1, 2, -3, -8, -6, -0, -7, -1, 4, 5, 0, -8, -4, -1, -1, 4, 9, 7, 2, -1,
          4, 0, 0, -3, 1, 5, -3, 9, 8, 2, 6, -0, 7, -1, -8, 7, 10, 7, 1, -1, 1, -3, -9, 7, 4, 4, 7, -0, -3, -2, -6, 3,
          7, 10, -2, -3, -9, -7, -1, -0, 9, 9, 9, 3, 0, 5, 6, -3, 11, 2, 9, -7, 7, -12, -7, -3, 0, -3, 1, 1, 1, -1, -4, 0,
          0, 3, 1, 1, 0, -4, 3, 5, 4, -2, 2, 2, -9, 14, -5, 2, 0, -3, -2, -3, -2, 3, -11, 8, -1, -3, 2, 8, 7, 2, -4, 0,
          -0, 2, 7, 9, 0, 4, -4, 5, 9, 9, 4, -3, -0, -3, 1, 4, 13, 8, -4, -1, -5, -1, -2, 4, 0, 2, -3, -4, -4, -2, -3, -3,
          1, -9, -14, -8, -4, 5, 8, -6, 2, -3, -15, 9, 3, 9, 13, 14, -9, -11, 11, -2, 3, 4, -6, 6, 18, -21, -4, -4, -5, -8, 0, 8,
          1, -14, -8, -16, 13, -1, -3, 9, 3, -1, 5, 3, 1, -2, 5, 15, -6, -1, 15, -1, -2, -6, 5, 7, 3, 5, 8, 16, 3, -0, 3, 8,
          -1, -14, -2, 6, -4, -5, 4, 9, -6, -7, -10, -7, -2, 7, -8, -3, 0, -6, 2, -3, -7, 8, 3, -6, -6, -5, 1, 19, 4, -7, -1, -4,
          10, 8, 8, 4, 2, 4, -1, -1, -15, 6, 2, -9, -9, -4, 3, 7, 2, -4, 4, 5, -1, 3, -8, 12, 19, 14, 6, 6, 6, -9, -3, 1,
          -2, -4, -3, 1, -2, -2, 2, 4, 13, 0, 3, 1, -1, -4, 0, 5, 8, 0, -2, 4, 2, -3, -1, 5, 11, 3, 2, 5, 1, -3, -1, 3,
          6, -4, -8, -4, -10, -9, -10, 2, 3, 14, -12, -15, -13, -12, -11, 11, -11, 2, -6, -9, -12, -16, 6, 2, 1, 5, -1, -1, 5, -1, -2, 2,
          1, 3, 2, 4, 3, -4, 3, -10, -24, -6, 9, -2, -2, -6, 3, -7, 1, 2, 2, 11, -16, -9, -5, 1, -2, -7, 4, -3, 3, -8, 5, -2,
          -2, 1, -3, -0, -1, 3, -1, -1, -2, 1, -2, -2, 3, 2, 5, -2, -5, 0, -1, -1, -4, -2, 3, -4, 0, 3, -4, 0, 3, -4, 4, -8,
          -10, -6, 2, 6, 1, -0, -5, -7, 1, -3, 2, 0, -1, -11, -21, -3, -8, 8, 4, 7, 2, 3, -11, -6, 6, 4, 3, -0, 15, 10, 1, 1,
          -0, -1, 9, 13, -2, 32, 23, -1, 3, 3, 10, 19, -15, 14, -3, -10, -2, 2, 4, 10, 13, 17, 16, -3, 3, -4, 0, -3, 6, -9, -2, 10,
          8, 14, -17, -3, -5, -2, -4, 8, 17, 7, -0, -2, -15, -8, -3, 15, 7, 4, 4, -1, -14, -18, -2, 9, 19, 15, -16, -2, -23, -14, -10, -4,
          0, 8, -9, 7, 3, -4, -12, 12, 3, -2, 3, 3, -3, 1, 4, 7, 0, 14, 4, 2, 12, 14, 16, 5, -11, -21, -7, -9, -2, 0, -0, 2,
          0, 2, -1, -2, -2, 1, -2, 2, 0, -0, -1, 6, 4, 4, 5, 2, 0, -3, -0, 1, 3, 7, 6, 3, 5, -0, -3, -3, -4, -1, 4, 10,
          8, 6, 1, -6, -7, 1, 3, 11, 4, 5, 1, -12, -7, -4, 16, 5, 15, -3, -5, -2, -8, 6, 16, 3, -4, 3, 1, -4, 4, 5, 0, 2,
          0, -3, 0, -1, 3, 4, 2, 5, -3, -11, -4, 12, -1, -8, -11, -4, -6, -7, -3, -4, -1, 4, -0, -9, -5, -7, 1, 4, 12, 7, 1, -8,
          -6, -2, -4, 0, 8, 3, 6, -7, -10, -1, -3, -0, 2, 9, 7, -6, -6, 0, -4, 2, -0, 9, 11, 3, 2, 1, 2, 1, -4, 5, 3, -4,
          -3, -5, 5, 5, 2, 2, -2, -6, 3, 4, -3, -3, 1, -4, -3, -1, -1, 10, 9, -4, 5, -4, -1, -12, -1, 3, 6, 28, -2, 2, -3, -2,
          6, 6, 7, 3, 1, 1, -1, -5, 4, 8, 9, 8, -9, -7, -4, -4, -3, -1, -1, -3, 9, -5, -3, 5, -15, -10, -7, -3, 5, 0, -17, -16,
          -2, -4, -8, -4, -6, 5, 4, -4, -5, 1, 8, 1, -4, 2, -1, -6, 11, -5, -2, 3, -7, -5, 5, 5, 10, -1, -12, -8, -21, 5, -1, 3,
          -4, 11, -11, -15, -28, -13, -7, 21, -10, 8, -7, 3, -17, 5, -1, 8, 18, 26, 14, 5, -4, -3, -4, 14, 23, 31, 15, 5, 2, -4, -4, -4,
          -3, -1, 4, 2, 5, -2, -2, 1, -1, -6, 2, -5, -1, 3, 7, -3, -1, -2, 3, -0, -3, -1, 1, -2, 1, -2, 4, 2, 3, 7, 8, -2,
          1, -2, 2, 5, -1, 5, 4, 2, -8, -7, -1, 2, -1, 4, -2, 0, -5, -14, -11, 1, -3, 6, 1, -1, 3, -4, -2, -1, 0, -3, -3, -2,
          4, 0, -4, 5, -4, 5, 2, -1, -3, 3, -1, 4, 13, 12, 5, 5, -3, 1, 4, 6, 6, 4, 13, -6, -4, -2, -1, -1, 5, -6, 5, -6,
          -3, -3, -12, 1, 0, 0, 4, -9, -13, -10, 0, -4, 2, -1, 4, -5, -10, -11, -11, -1, 1, -5, -4, 3, -1, 2, -4, -4, 5, 4, 1, 8,
          13, 14, -1, 5, 7, 4, 6, -3, -2, 2, 1, 3, -12, -9, -16, 2, -17, 2, -6, -16, -9, -8, -4, -2, 3, -8, -5, -4, 0, 6, 8, 3,
          7, -2, -7, 3, -3, -9, 10, 4, -9, -2, -5, -19, -7, 8, 13, -2, -7, 0, -3, -8, -2, -11, 5, -1, -2, -5, 9, -1, -5, -12, -4, -11,
          -12, -12, -7, -10, -7, -1, 4, -8, -7, -6, -1, 10, -1, 5, 7, -7, -1, 2, 2, -2, 0, 2, 5, -14, -15, -4, 7, 0, -4, 1, 1, -15,
          -10, -8, -17, 3, 3, -5, -6, -6, 5, -1, -1, 4, 0, -3, 6, 1, -1, 4, 4, 8, 5, 7, 7, 6, -2, -19, -14, -27, -3, 1, 7, 0,
          1, 0, 2, 5, -2, 0, -1, 0, -1, -7, -9, 4, 5, -4, -4, 3, 1, -2, -4, -2, 0, 1, 2, 4, 6, -4, -6, -5, -5, -5, -5, 7,
          -1, -8, -5, -9, -2, -8, -5, 16, 4, -12, -11, -2, -10, -2, 1, 2, 10, -15, 8, -6, 4, -1, 6, 4, -4, 5, 2, -3, -1, 3, 2, -4,
          -2, -3, 5, -2, 4, -2, 4, 10, 19, 13, 10, -5, 8, 9, 20, 7, 1, -8, 10, 20, 0, 3, 2, 6, -1, -8, 10, -5, 5, -2, 2, -6,
          -7, -1, -5, 3, -0, 8, 2, -6, -4, -1, -7, -0, 1, 9, 9, -5, -7, -0, -4, -5, -2, 8, 12, 0, -4, 2, 1, 5, -2, 2, -4, 8,
          4, -4, 10, -5, 9, 9, 6, 2, 3, 2, 1, 0, 9, 12, 10, 3, 5, 1, 6, -5, 1, 1, -2, 2, -7, 2, -7, -11, -5, -6, -5, -3,
          0, -3, -9, -7, -6, -2, -3, -4, -4, -5, -11, -6, -5, -2, -5, 0, -4, -2, -3, -7, -7, -1, -6, -1, 1, -6, -3, -1, -9, -2, 5, 5,
          -11, -9, -6, 9, -7, -6, 3, -21, -9, -9, -5, -5, -1, 1, 2, -12, 1, -5, 1, -1, -4, 3, -6, -23, 2, -3, -4, 1, 6, -2, -5, 9,
          6, -2, 2, 5, 16, -0, -7, -1, -1, -4, 1, 1, 7, 6, 5, -5, -4, 0, 2, 5, 11, 5, 2, 2, -13, -19, -1, 12, 2, 3, 5, 4,
          3, -3, -3, 1, -4, 2, 0, -2, -6, -4, -2, -0, -2, 2, -1, 0, -0, -2, 0, 1, -9, -2, -0, -0, 2, 1, 0, -1, -2, 1, 5, -9,
          8, 11, 7, 3, -10, -4, 3, 1, 1, 4, 1, 10, 10, 10, 7, 9, 10, 4, -8, -5, 0, 3, 7, 4, -3, 2, 3, -3, -3, 1, 5, 0,
          0, 4, 5, 2, 0, 5, -3, 4, 2, 16, 8, -3, 3, -12, 31, 3, 9, -4, 21, 20, -3, 8, 14, -3, 5, 4, 5, 7, -2, 3, -7, -3,
          -4, -0, -0, -0, 2, -1, 9, -5, -6, 1, -8, -2, 6, -7, 5, -2, -13, -3, 1, 6, 4, -4, 2, -1, 0, 3, 4, -2, 5, 3, -1, -3,
          6, -32, 6, -10, 7, 6, -3, 31, -6, -6, 8, -4, 3, -6, -2, 14, 6, 0, 3, -9, 15, -10, -7, -2, -1, 4, -2, 3, -6, -6, -6, -2,
          4, 6, 5, -3, 3, -8, 3, 5, 13, 10, -4, 16, 8, 12, 3, 7, 18, -3, -4, 5, 11, 3, 1, 8, 10, -0, 7, 2, -2, 3, -3, -7,
          16, 14, 12, 1, 12, -19, -3, 6, 17, 8, 6, -1, 8, -5, -5, 13, 14, 8, 15, -14, -16, 10, -7, 10, 8, 7, 19, 7, 18, 20, 23, 21,
          7, 13, 11, 0, 6, 26, 35, -1, 13, -5, -6, 10, 2, 2, 7, 5, -16, 2, 9, -0, -2, -2, 1, 7, 6, 1, 4, 2, 2, -11, -4, 0,
          3, 0, 5, 1, 4, 3, -3, 2, 6, 7, 2, -4, -5, 2, 5, 2, 4, 6, 2, 1, 0, -1, -0, 1, 0, 5, 3, 2, 2, 3, 1, -1,
          2, 1, 2, 3, 3, 2, -4, -5, -2, 3, -2, -3, -3, -6, -13, -2, 1, -14, -5, -0, -2, -3, -11, -4, 2, 3, 2, -3, 5, 1, -2, -1,
          -2, 5, 2, 4, 0, -2, -3, 18, 3, 32, 12, 12, 21, -9, -12, 4, 31, 6, 1, 12, -10, -1, -8, 7, 6, 3, 3, 1, -6, -2, -9, 6,
          7, 4, 5, -2, -4, -5, -10, 7, 7, 5, 1, -0, -0, -4, -5, 8, 9, 5, 7, 0, 2, -3, -7, 3, -1, 0, -1, 4, -3, -1, 1, 9,
          16, 24, 6, 8, 5, -5, -9, 15, 10, 1, 9, 7, -0, -7, -4, 13, 7, 5, 7, 12, 5, 4, -7, 13, 8, -1, 15, 9, 3, -1, -8, 13,
          -7, -28, 5, 6, -6, 0, -7, 15, -1, -0, 2, 1, -14, -16, -6, -3, -2, -7, -12, -4, 2, 1, -5, 4, 16, -1, 6, 6, 1, 5, 2, -3,
          -19, -6, -0, -7, -8, 9, 11, -14, -8, -1, -1, 7, -0, 14, 15, -16, -11, -1, -6, 8, 1, 6, 7, -11, -5, 0, -6, -3, 8, 4, 0, -5,
          -4, 3, 0, 2, 5, 3, 11, -8, 4, 14, 6, 8, 7, 15, 11, -2, -7, 2, -3, 4, 8, 11, 12, 1, -10, -12, -9, -11, 1, 2, 5, };




int sigmoid(int x){
    return round(1 / (1 + exp(-1 * x)));
}

#endif
