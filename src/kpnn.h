#ifndef KPNN_H
#define KPNN_H

#include <math.h>


// use net Pnet => 128x16x2 => opS /egS outputs
#define N_INPUTS   (64 * 2 * 2)
#define N_HIDDEN   (8)

int OUTPUT_BIAS1 = -5;
int OUTPUT_BIAS2 = -7;
int HIDDEN_BIAS[N_HIDDEN] = {-2, -3, 3, -2, -3, 2, -1, -2, };
int OUTPUT_WEIGHTS1[N_HIDDEN] = {10, 28, -23, 45, 11, -16, 7, 25, };
int OUTPUT_WEIGHTS2[N_HIDDEN] = {6, 5, -1, 6, 7, -7, -12, 10, };


int HIDDEN_WEIGHTS[N_INPUTS * N_HIDDEN] = {
          -2, -1, 5, 3, 3, 0, 3, 1, 4, -0, -3, 2, -0, -3, -4, 3, 3, 2, -2, -2, 1, 0, 5, 4, 2, 2, -2, 1, 3, -0, 9, -2, 3,
          1, 5, -5, 1, -5, 13, -1, -9, 11, 1, -3, -2, 4, 3, -1, 3, -3, 6, -4, -3, -7, 1, -9, -4, 5, 5, 3, -2, 5, -1, 2, 2,
          2, -3, 2, 3, 5, -1, 2, 7, 6, 2, 6, 5, -3, -2, -3, -11, 10, 6, -1, 5, 3, -2, 1, -1, 0, 1, 6, 6, -0, -1, 0, -1,
          -0, 1, 2, -0, 2, -2, 1, -0, 0, 4, 1, -2, 0, -2, -1, -1, 1, 1, 3, 1, -1, 1, 0, 2, 4, -3, 4, -4, 3, 1, -4, -3,
          -4, -1, 2, 11, 2, -1, -0, -2, -4, 3, 2, 3, -0, 3, -6, 9, -1, -2, 3, -0, -2, 0, -3, -2, -2, -2, -0, -1, -2, -14, -7, -7,
          0, -3, -0, -1, -3, -6, -2, 2, 10, 2, -2, 3, 3, 14, 1, 3, -1, 7, -0, 19, 4, -1, 2, 6, 3, 5, -0, 1, 7, 1, -0, -8,
          8, 6, 11, 10, -1, -2, -3, 7, 5, 12, -10, -10, 12, -1, -1, 4, 6, 11, 9, 1, -14, -2, -0, 20, 7, 11, 11, -6, -4, -2, 3, -4,
          -6, 6, 12, 0, -5, -4, 4, -2, 4, -6, -2, 1, -3, -1, -1, 3, -3, -10, -15, -4, -2, 2, -0, -5, -3, 5, -3, 1, -1, 5, -0, -1,
          0, 3, 3, 3, 4, 1, 4, -1, -1, -0, -6, -3, -4, -4, -1, -1, -2, 0, -1, -1, -1, -7, -3, -2, -1, 2, 2, 3, 1, -2, -4, -5,
          2, 2, 2, 2, 6, -2, -2, 6, 4, 6, 3, 6, 3, 1, -10, 9, 9, -1, 5, 0, 0, -5, -4, -4, 5, 5, -4, -1, -4, -3, -3, 3,
          5, 0, 1, 0, 3, 5, -2, -2, 5, 4, -1, -7, -6, -4, -5, 3, 0, 4, 2, -9, -6, -3, 2, 4, 1, 4, -1, -4, -8, -4, -3, 3,
          3, -1, 4, -2, -5, -6, -2, 3, 3, 0, 3, 4, -1, -4, -3, 4, 4, 2, 2, 3, 3, -3, -5, 3, -1, 1, 4, 1, 3, 2, 3, -1,
          2, 2, -0, -8, -6, -3, -1, 5, 3, 2, 2, 1, 2, -1, -1, -2, 1, 3, 2, 3, 1, 0, -7, 4, 6, -4, -3, 2, 1, -1, -2, 2,
          3, 5, 1, 4, 2, -3, -3, 4, 3, 6, 2, 3, 4, 0, -1, 5, 8, -2, 7, -0, 5, 3, 9, 11, 4, 5, -0, 4, 8, -8, 1, 3,
          1, 6, 6, 5, 3, -3, 2, 6, 1, 5, 2, 2, -1, 1, -7, 7, 3, 4, 3, -1, 2, 1, 2, 3, 8, 6, -3, 3, 8, 3, 3, 2,
          5, 7, 2, 3, -2, 2, -4, -5, -4, -3, 1, 0, -3, 3, 1, -2, -2, -6, 0, 0, 7, 1, 3, -5, 10, -11, 5, -4, -0, -1, 3, 5,
          4, 3, -1, 5, -2, -2, -4, 2, 1, 1, 5, 5, -2, -3, 3, 2, 2, -1, -0, 3, 4, -1, 1, 3, 3, 0, 0, 1, -1, -3, -2, 2,
          2, 2, -5, -4, -1, 8, -3, 3, 7, -0, -3, -8, -8, -2, -3, -2, 3, 0, -1, -2, -4, -3, 4, 5, 2, -4, -1, 4, -2, -2, 5, -1,
          2, 4, 0, -2, -4, 2, 3, 9, 8, 4, -0, 9, 6, 6, -5, -7, -2, 0, 0, 3, 2, 2, -1, -2, -3, -1, -1, 4, 10, 1, 6, -3,
          -2, -2, -2, 2, 6, 1, 1, -5, -2, -1, 7, -1, 3, 1, 5, -4, -0, 1, 1, -1, 2, 7, 5, 1, 4, 5, 4, 0, 5, 0, 0, 6,
          8, 1, 7, 5, 2, -2, -2, -11, -1, 7, 1, 6, 2, -2, -2, 5, 4, 4, 2, -5, 3, 2, 1, 1, -3, 8, 2, 2, -1, 7, -2, -3,
          4, 9, 6, 2, 0, -2, 4, -3, 2, 3, 1, 2, -2, -5, 5, -6, -7, -3, -8, 2, 7, -7, -6, 0, -7, -3, 3, 0, 2, -5, -2, -3,
          1, 5, 4, -4, -5, -3, -5, -8, 5, 2, -1, 0, -7, -6, 1, -0, -1, -7, 1, -4, -8, -5, -5, 4, -2, 4, 4, -5, -6, -7, -10, 4,
          3, -8, -14, -3, -0, -10, -12, -2, 12, -9, 5, 2, -2, -3, -6, 4, 13, 6, 11, -3, 4, 0, -4, 5, 11, 15, -1, -2, 0, -1, -2, 2,
          0, 2, 0, -3, 3, 1, -4, -1, -2, -4, -1, 2, 3, 0, -1, -1, -3, -2, -1, 0, 0, -1, 0, -1, 1, -2, -1, -1, -1, -1, -1, 1,
          1, 2, -0, -3, -1, -0, 2, 2, 1, 2, 1, 0, -1, -1, 6, 1, 3, 4, 7, 3, 1, 0, 8, 2, -3, 4, -4, -1, -1, -4, -4, 0,
          0, 2, -1, -1, -1, 1, 5, -3, -7, -17, -1, -1, -10, 3, 5, -6, -4, -6, -2, -6, -0, 1, 1, -3, -3, -3, -1, -1, 3, 0, 2, -3,
          -4, -3, -3, 0, 2, 2, 4, -4, -5, -3, -2, 1, 0, 3, 3, -3, -5, -3, -4, 0, -0, 2, 4, 0, 4, -2, -1, 4, 1, -4, 2, -3,
          -7, -9, -3, -5, -5, 2, 2, -9, -3, -3, -4, -3, 1, 2, 2, 2, -3, -4, -6, -4, -5, 2, 2, -9, 2, 1, -9, -11, -2, 2, 3, -4,
          2, 0, -1, -4, 1, 2, 3, -2, -1, -5, -1, 1, 5, 3, 2, -5, 3, -4, 1, -0, 5, 6, -3, 1, 1, -0, 1, -0, 0, 4, 2, 3,
          4, 3, 4, 2, 5, -8, -8, 9, 5, 2, 2, 0, 2, -3, -11, 10, 4, 3, 4, 3, 0, -6, -9, 9, 2, 1, 5, 4, -2, -1, -0, 4,
          2, 0, 1, 2, 1, -1, 5, 3, 0, -4, 0, -4, -3, -3, -3, 1, 5, 4, 2, -4, -3, -5, -5, 7, 7, 8, 7, 7, 1, -1, 0, 4,
          -1, 4, 2, -4, -2, 1, 1, -1, 7, 2, 2, 2, 2, -0, -3, 0, 4, 0, -1, 3, 1, 0, -3, 2, 3, 2, -0, 2, 2, -2, 7, -2,
          1, 1, -6, -3, -2, 4, 2, 0, -0, 1, -2, -7, -4, 7, 9, -5, -6, 5, -3, -8, -10, -11, 4, -3, 2, -1, -2, 1, 3, 5, 4, -4,
          -1, -3, -1, -3, 4, -4, 4, -6, 5, 6, 6, 6, 12, -11, 9, 1, 6, 4, 6, 9, 2, -7, 11, 5, 1, -3, -3, -3, -1, 0, 4, -1,
          2, -3, -3, -3, 1, -1, 3, -2, -1, -3, 1, -1, 2, -4, 3, -1, -0, -2, -3, 1, -1, -3, 2, 3, -2, 3, 3, -1, 3, 3, 3, 2,
          2, -1, -4, 2, 3, -5, -5, -0, 0, 3, -2, 3, -1, -2, -5, 1, 4, 7, -3, -2, 8, -4, 5, 6, -6, 8, 1, -2, 9, 5, -0, -1,
          -6, 10, 4, 13, 3, 3, 3, -6, 6, 4, 12, 13, -6, -1, 2, 7, 4, 4, 11, 8, -3, -5, 4, 3, 1, 10, 2, 0, 3, -1, -4, -2,
          1, 3, -6, -4, 7, 5, -1, 1, 1, 3, 4, -16, -1, -4, -9, -0, 1, 1, -0, -2, -17, -0, 18, 8, 3, -1, 3, 9, -9, 3, -0, 4,
          7, -1, -1, -4, 1, 3, -3, 4, 3, 7, 1, -3, 3, -1, -0, 1, 2, 7, 5, -4, 1, 4, 2, -2, -10, -6, -6, 1, 4, 8, -2, 5,
          0, -4, -3, -2, 1, 3, -4, 3, 5, 1, -0, -0, 6, -0, -4, 4, 0, 3, -1, -1, 5, 2, -3, 4, 0, 4, 1, 2, 2, 9, 1, 3,
          4, 10, -5, -3, 4, 4, -0, 1, -2, 2, -0, -3, 3, -1, -2, 5, -3, -0, -4, 4, 1, -0, -5, 4, 2, 5, 1, -3, 5, -4, -4, 1,
          3, -3, 4, -2, -4, -4, -3, 10, -7, -6, 5, 5, -2, -1, 6, 0, 3, 1, 3, -9, 2, -3, 5, -1, -6, -3, -2, -2, 0, -4, 3, -2,
          2, -3, -3, -3, 5, -4, -2, -3, 0, -3, 4, 8, 1, 4, -4, -4, 6, 1, -4, -3, 0, -0, -4, 5, -2, -2, 2, 1, 0, -4, 4, 3,
          -1, 2, 1, 5, -1, -4, -2, -6, -0, 3, -8, 7, 2, 2, -2, -4, 5, -1, -1, 1, 5, 11, -4, 6, 3, -1, 1, -3, 1, -2, 8, -5,
          -9, 1, 0, 0, 10, 10, 6, 8, -1, 5, -6, 3, -5, 8, 4, -5, -6, -2, 13, -1, 3, -1, 8, -2, 0, -13, -6, -1, -2, 7, 4, -7,
          -13, -6, -5, -4, -4, 14, 9, -6, -6, 11, 11, 11, -4, 3, 13, -11, 11, 8, 10, -2, -2, 4, 0, -2, 5, -1, 12, 4, 5, 0, -1, -9,
          0, 2, 5, 1, -1, -5, 1, -1, 9, 7, 10, 6, -0, -2, -2, 3, 7, 5, -5, -0, 1, 2, 1, 7, 8, -3, 1, -1, 0, 4, 5, -3,
          5, -1, -1, -4, 0, -2, -2, 0, 3, 1, 4, 1, -1, -2, -2, -0, 1, -2, 3, -1, -3, -5, -2, 3, 3, 7, 2, 0, -1, -3, -4, 1,
          1, 3, 5, 3, -1, -3, 0, -0, -2, 7, 6, 2, 10, 8, 12, 3, 12, 3, 6, 4, 20, -11, -8, -4, -2, 4, -3, -3, 5, -4, 4, -3,
          0, 1, 2, -4, 1, -2, -2, 12, 14, 10, 8, -3, 2, 10, 17, 3, -2, -3, -0, -1, 2, -2, 9, 1, -1, 4, 3, 1, -10, 1, 2, 3,
          1, -1, -2, 1, 0, 2, 1, 2, 4, -0, -0, 4, 1, -2, -1, 1, 1, 3, -0, 1, 2, -5, -3, 2, -4, 3, -1, -3, 3, -2, 0, -3,
          1, -0, -9, 3, -2, 3, 6, 6, 8, 2, -0, 1, 3, 4, 6, 11, -3, -6, -2, -4, 2, 3, -3, 3, -2, -6, -10, -9, -4, -4, -5, -1,
          -11, -5, -7, -8, -14, -3, -3, 5, -9, -3, -7, -7, -2, -1, 2, 7, 9, 3, -2, -1, 2, 14, -9, 10, -1, 7, 4, 5, 6, -4, -4, -1,
          3, -3, 4, 12, 5, -4, -1, 5, -3, -3, -3, 4, 5, 2, -4, -4, -4, 6, 1, 4, -1, 4, -5, 0, -8, -3, 7, 18, 7, -3, 15, 4,
          4, 7, 9, 5, 5, 6, 5, 1, -1, 2, -2, 1, -0, -4, -2, 1, 1, 0, 7, -0, 4, -9, -7, 2, -0, 12, 9, -4, 7, -3, -3, -1,
          0, 4, 3, 1, 0, -3, 5, 3, 3, 3, 2, 2, 3, -1, -6, 4, 3, 2, 0, -3, 3, -2, -4, 3, 3, 2, -0, -3, -1, -4, -5, 2,
          2, 3, -1, -4, -4, -4, -4, 1, 8, 5, 2, 3, -2, 3, -2, -1, 5, 12, 0, 1, 1, -6, 1, -2, 1, 2, 2, 0, 4, -3, 2, 0,
          2, 1, 0, -3, -2, -1, 5, 2, -1, -3, -2, 2, -7, -4, 0, 1, -0, 0, 2, -0, 10, -1, -7, -1, 1, 3, -0, 7, 3, 0, 2, 2,
          1, 4, 7, 5, 2, 2, -1, 2, 5, 5, 2, 2, 2, 1, -1, 1, 6, 6, 1, -1, 1, 2, 0, 2, -2, -3, -2, -3, -1, -4, 3, -7,
          -4, -7, -3, -6, -3, -1, -2, -1, -1, 1, -1, -1, 1, 0, 3, -0, 4, -2, 7, 11, 7, 5, -7, -5, -1, 1, 5, 4, 4, 2, 6, 0,
          -4, 3, 5, -0, -0, 10, 13, 2, 0, 3, -0, 10, 7, 14, 8, 2, -5, -0, 0, 8, 14, 14, 4, -0, 1, 7, 6, -1, 3, 5, 1, 5,
          5, 5, 4, 5, -4, -7, -7, 12, 7, 6, -3, 1, -2, -10, -11, 5, 9, 4, 0, -11, -2, -0, -4, 10, 1, 2, 3, 1, 4, -0, -2, 4,
          3, 2, -1, 5, 5, 5, -3, 7, 2, 1, -3, 6, 3, -2, -3, 1, 3, 4, 3, 6, 5, 1, -1, -4, -0, 2, 4, 5, 3, -4, -1, };

int sigmoid(int x){
    return round(1 / (1 + exp(-1 * x)));
}

#endif