#ifndef KPNN_H
#define KPNN_H

#include <math.h>


// use net Pnet => 128x16x2 => opS /egS outputs
#define N_INPUTS   (64 * 2)
#define N_HIDDEN   (8)

int OUTPUT_BIAS = -2;
int HIDDEN_BIAS[N_HIDDEN] = {408, 374, -336, -262, 190, 137, -36, 170, };
int OUTPUT_WEIGHTS[N_HIDDEN] = {2, 4, 0, -2, -2, 3, -1, 4, };


int HIDDEN_WEIGHTS[N_INPUTS * N_HIDDEN] = {374, 172, -286, 386, 195, 321, 27, 269, -34, -372, -47, 327, 84, -110, -129, -280, 262, -178, -371, -170, 297, 204, -355, 354, -30, -26, -268, 5, 407, -236, 201, 29, 329, 328, 5, -193, 224, -368, -346, 226, 88, -32, -165, 133, 233, 86, 295, -202, -51, 310, 65, -120, -209, -292, 260, 105, 97, 39, 126, -278, 202, 367, 121, 137, 273, -294, 314, -252, 166, 9, 11, -158, 350, 216, 14, -118, 347, -80, 35, -129, 252, 82, -224, -381, 202, -361, -228, 324, 102, 3, -321, 348, -79, 164, -281, -202, 331, 93, 418, 84, -314, -2, -11, -311, -164, -367, 399, -217, 378, 15, -250, 269, 167, -76, -77, -412, 5, 152, 345, 103, 135, 82, 37, -334, -121, 159, 317, 229, -157, -35, 345, -65, 375, -97, -343, 256, 355, -334, 117, 354, -292, 268, 231, -96, -215, 159, 347, -246, 370, 325, -103, 105, -362, 343, -212, 412, -257, -270, 181, -46, -261, 156, -35, -320, 85, -341, 18, 45, -279, -295, -353, -172, 309, -123, -276, 91, -377, -391, -110, 368, -19, 127, -347, 6, -311, -150, -45, -187, 400, 182, -173, -286, -94, -176, 252, 29, -122, -155, 109, -33, -89, -272, -200, 251, 17, -116, 362, -320, 367, -155, -383, -74, -19, -320, 352, 111, 388, 389, -42, 395, 160, 156, -307, 108, 417, -3, 197, 328, 265, -97, -95, 207, 92, -250, -250, 112, -309, -278, 183, -298, 388, 234, -313, -22, -57, 103, 132, -75, 51, -373, 312, -195, -157, 47, -38, -165, -367, -253, -248, -89, 41, -316, -283, 150, 220, -163, -144, -30, 387, 97, -333, 333, 362, -284, 349, -124, 219, -321, -201, -142, -280, 177, -304, -398, -190, -279, -185, 299, -136, -321, -185, -47, 153, 366, 123, -345, 259, 80, 43, 236, -203, 123, -173, -323, 216, 216, -17, -320, 297, -183, 379, 47, 375, 122, 64, 230, 236, -52, 118, -303, -369, -36, -305, 198, -73, 242, -85, -225, -102, 351, -357, 53, 17, 241, -187, 319, 70, -173, 44, -346, 33, -7, -240, -361, -275, -147, -37, 363, 229, -327, 118, -60, 38, -132, 159, 14, -308, -354, 214, -342, -400, -159, -227, -331, 152, -10, 40, 277, 208, -313, 327, 300, 90, 148, 31, -145, -393, 379, -173, 221, -354, -22, 161, -274, 224, -100, -220, -40, -47, 361, 1, -45, 238, -188, -316, -368, 189, 183, 348, -343, 277, 256, 343, 406, -309, -25, -141, -319, -19, -241, -50, -342, -241, -285, 220, 25, -1, -380, 426, 351, -3, -354, 362, 317, -149, -323, 364, 94, -130, 277, 151, 155, -200, 71, 153, -138, -342, 73, -69, -319, 225, -75, -287, 392, 25, -14, 32, -376, -9, -321, 24, -395, -272, -21, -44, -370, -311, -97, 131, -36, -212, -175, -267, -364, 324, -70, -104, 29, -370, -110, -272, 251, 216, 273, -110, -174, -103, -47, 311, 256, 41, 386, -58, -183, -54, 307, -157, -310, 244, 370, 57, -416, -181, -181, 68, 166, 132, 408, 245, 141, 316, 372, -343, 144, 256, 362, 19, -266, -79, 374, 51, 7, 353, 21, 221, 359, -101, 112, -353, 174, 103, -257, -176, -86, -46, 325, 151, 113, 293, -48, 361, 222, 364, 350, -373, 235, 301, 22, -13, 263, -351, -342, -120, -378, -285, 133, 363, -296, -163, 61, 226, -37, 158, -319, 247, 165, 383, -340, 309, -34, 32, 241, -239, -346, -181, 265, 258, 148, -99, 315, 52, -390, 20, -21, -377, 145, -274, 42, 216, -16, 157, 61, 359, -398, 126, -80, 188, -179, -20, -201, 128, 11, -389, 325, 44, -173, -115, 385, -364, 132, 297, -295, -238, -95, 80, -167, -330, 230, -65, 267, 262, -313, 371, 231, -329, 127, 150, -117, -75, -271, 41, -332, -200, -285, 63, 275, 378, 300, -157, 66, -306, -231, 168, -112, -295, -139, 110, 203, 127, 70, -283, -23, 138, -308, 234, -143, -148, -13, 131, 191, -269, 267, 248, -73, 374, -86, 255, 345, -179, -301, 16, -87, 282, 232, 214, 409, 154, 371, -163, -148, 25, -39, -117, 227, 62, 154, -304, -45, -233, -143, -273, 373, -219, 78, 362, 166, 401, 150, -224, 263, -78, -160, 237, 228, -337, -338, -125, -150, 80, 120, 118, -293, -317, 58, -31, -215, -168, 39, 139, -359, -42, -67, 32, 63, 395, -24, 280, 41, 153, -364, 347, 113, 303, 181, -61, 33, -118, 213, 281, 363, -54, -349, 156, -310, 104, -298, -114, 9, -204, -398, 15, 146, -65, -337, 276, 369, -298, -207, 18, 258, -155, -31, -16, 237, 199, 355, -125, -320, -177, -250, 102, 171, -191, -169, -103, -36, 377, 161, 351, 209, -189, -374, -49, -205, 144, 279, -235, 211, -297, 177, -270, -449, 180, 124, 227, -364, -270, -296, 141, -28, 335, -152, 166, -255, -249, -346, -230, 174, -107, -311, -20, 89, 182, 328, 266, -75, -123, -318, 209, -64, -100, 356, -25, 147, -262, 255, -146, -71, 52, -380, -83, -13, 341, 153, -227, -325, 235, -70, 246, 173, -314, 274, -126, 267, -148, 217, 241, 108, -64, -301, -346, -92, -328, -326, -337, 290, 324, -63, -233, -7, 363, 87, 13, 305, 282, 187, 357, 134, 158, -153, 348, 227, 191, -191, -260, -363, 59, 39, 132, -378, 152, -132, -90, -128, 357, -374, -282, -45, -69, -100, -35, -132, 40, 399, -193, -63, 137, 190, 155, -75, 114, 114, 216, -103, -6, 374, 380, -309, -331, 122, -277, 214, 21, -303, -335, -12, -294, -176, 376, -282, -242, 375, 31, -118, 354, -146, -98, -209, 80, -348, -254, 263, -162, 349, 211, 202, -32, 155, -38, 99, 395, -292, -156, -37, -189, 411, 23, -80, -192, -370, 47, -389, 376, 107, -85, 362, 4, 166, 166, 126, -101, 306, -16, 102, 283, -216, 357, 320, 363, -97, -375, -39, -332, -104, 331, -118, 334, -61, -115, 186, 405, -49, 219, 344, 133, 130, -78, -269, -93, -285, 229, 185, -364, 246, 339, -49, -339, -73, -128, 44, -98, -112, -349, 1, -133, 3, -79, 226, -9, 176, 14, -42, 186, 227, 383, -86, -60, -58, -381, -68, 58, -43, 171, -287, -206, 88, 89, 276, -336, 18, -69, -33, -28, 395, };

int sigmoid(int x){
    return round(1 / (1 + exp(-1 * x)));
}

#endif