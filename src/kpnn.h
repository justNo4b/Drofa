#ifndef KPNN_H
#define KPNN_H

#include <math.h>


// use net Pnet => 128x16x2 => opS /egS outputs
#define N_INPUTS   (64 * 2)
#define N_HIDDEN   (8)

double OUTPUT_BIAS = 2;
double HIDDEN_BIAS[N_HIDDEN] = {-264, -37, -330, -365, 361, 318, -289, 39, };
double OUTPUT_WEIGHTS[N_HIDDEN] = {-1, 2, 1, -1, 2, -1, -1, -1, };


double HIDDEN_WEIGHTS[N_INPUTS * N_HIDDEN] = {-38, -71, -268, -68, 56, -155, 219, 238, -41, 81, 292, 297, -168, 254, -179, -109, 26, 359, 234, 52, -344, 254, 92, -241, 211, -288, 85, -302, 233, -245, 168, -212, 67, -32, 115, 173, -165, 377, -339, 214, 91, 349, 141, 326, -191, -16, -238, 263, -63, 102, -107, -370, 367, 35, 253, 160, 128, 365, -107, -54, -292, -345, -226, -171, -3, 286, 53, -120, -87, 116, -313, 379, -313, -148, 280, -83, -109, 96, 218, 195, 239, 179, -91, 171, -237, -286, 365, 284, -309, -99, 267, 259, 411, -316, -303, -394, 7, 150, -88, 347, -140, -9, 304, -19, -90, -169, -75, 175, -6, -230, -368, -211, 267, -72, 21, 107, -298, -7, 0, -208, -75, 328, 82, -91, 384, 158, -61, -25, 335, 248, 326, 228, 292, 208, 223, -211, 73, -252, 16, -356, 385, 40, 256, -115, 366, 321, -393, -331, -72, -350, 271, -121, 391, -370, 179, 17, 177, -279, 392, -254, 22, -57, 379, -91, -265, 201, -264, -147, 29, -172, 352, -39, 257, 173, -88, -131, 124, 367, 381, 45, -375, -97, 310, 58, -41, -248, -337, 193, 320, 97, 362, -65, -344, 6, -109, 271, -174, -317, -249, 245, -100, -292, 255, 193, -62, 205, 122, 88, 194, 90, -232, 210, 56, 113, 338, 87, -93, 390, 329, -161, -267, 272, 169, -219, 350, 105, -348, 201, 198, 262, 54, 127, 358, 374, -67, 357, 176, 70, 39, -23, -205, 200, 268, -71, 379, 179, -401, -118, -182, 332, 122, -54, -132, 345, -222, 257, -294, 281, 72, 301, 135, 180, -317, -264, 148, -366, -309, 388, 127, 103, -392, -16, 334, 280, -36, 327, -269, -51, 221, -409, 340, -389, 392, 240, 332, -221, 103, -342, -336, -212, 0, -161, 4, -255, -35, -221, -194, 37, 204, 35, 233, 237, -382, 190, -207, -44, -215, 391, -10, -363, 371, 366, 133, 39, -91, -240, -137, -369, 292, -80, 272, 373, -193, -107, -263, 182, -288, -391, 294, 321, 35, 101, 169, -294, -67, 387, -265, -237, 6, -219, 272, 8, -200, -24, -363, 71, 133, -78, -245, -310, -141, 84, -334, 62, 18, -231, 296, -241, -218, 174, -314, -133, -103, -74, -20, -107, 337, 103, -317, -58, 284, 377, 8, 103, -400, -296, 261, -182, -323, -376, -88, 400, -245, -22, 83, 179, -171, -357, 10, 41, 244, 118, -41, 192, 79, 380, 153, 44, -267, 258, -357, 99, -125, -306, -208, -97, -175, -317, 102, -130, 151, -352, -109, -55, -342, 29, 180, -125, 88, -189, -8, 360, 310, 375, -206, 4, -28, 402, 138, 112, -88, -204, -168, 188, -94, 41, 184, 118, -199, -142, 66, 364, 361, 365, -72, -377, -358, -282, 361, -237, 367, -60, -273, 285, 349, -47, 359, -82, 396, 66, -331, -91, 242, -122, -309, -257, 36, 253, -58, -116, 172, 404, 278, -227, -14, 221, -211, 60, 15, 202, 178, -14, 206, -53, -133, 140, 332, 257, -311, 334, -74, 193, 265, 248, 128, 4, 40, -252, -129, 336, -326, 71, 5, 330, 267, 61, 190, 121, -295, -195, -64, -40, 187, -261, 342, 101, 290, -76, -35, 22, 309, 308, -173, 162, -214, 362, -221, 231, 172, -314, -131, 251, -179, 233, -169, -322, -80, -372, -148, -325, -205, 193, -323, 42, -33, 68, -273, 311, 397, 125, 381, -80, -305, -178, 181, -164, 231, -8, 124, -357, -305, 402, 291, -56, -101, 153, 4, -133, 161, -99, -55, 31, -314, 29, -313, -295, 151, -155, -385, -203, 15, 394, 139, -271, 225, 325, -369, -297, -78, 142, -261, 24, 142, 40, 345, 84, -209, 416, 347, 354, -89, -100, -20, -373, -39, -283, -280, -276, -405, 197, 375, 17, -182, 127, -208, 126, -300, -171, 234, 24, 393, 340, -356, -214, 13, 24, 284, -151, -298, 245, -199, -24, 184, -169, -348, 212, 397, 235, -9, -393, -319, -33, -321, 368, 129, -120, 97, 231, -233, -53, -141, -227, 334, 358, 378, 415, -348, 249, -152, -285, -260, -283, -260, -14, 393, 219, -214, 359, 88, -178, 37, -208, 189, -231, -253, 381, -314, 233, 218, -150, 238, 84, -20, -201, -341, -402, -175, 144, 268, -327, -142, 59, -230, -341, 55, 192, 265, 224, -199, 366, 86, 220, -253, -134, 366, -103, -176, -360, 191, 60, -129, 11, -244, -108, -147, 253, -84, 83, 7, 237, 148, 285, 309, -48, 332, -61, 202, -170, 209, 374, -204, -89, 227, 414, -172, -167, -85, -320, 321, 151, 145, 257, 204, -60, 200, -327, 233, -326, -222, -141, -49, -32, 160, 286, 319, 101, 266, -231, 351, 77, -249, 188, 2, 17, 187, 208, 249, 131, -66, -183, -134, -328, -344, 107, -349, 239, 185, 315, -6, 308, 169, -16, -100, -25, -139, 240, 132, -311, 387, 55, -193, 198, 293, 176, -185, 81, -334, 108, 281, 1, 317, -314, -296, 37, -130, 204, -143, -385, 102, -144, -51, -144, 213, -107, -137, 107, -258, 374, -154, 152, -348, -347, 362, 317, 239, 202, -384, -68, -112, 249, -42, 239, -5, -295, -154, 247, 302, -261, 261, -359, 0, 287, 380, 271, -226, -169, -377, -90, 250, -157, 89, 298, -122, -298, 195, 170, 309, 264, 157, -198, -254, -290, 100, 134, 269, 1, -19, -175, 123, 281, -143, 190, 195, 276, -316, 375, 169, -300, 341, 0, 364, 27, 321, -182, 115, 164, 71, -309, -377, -223, -138, -251, 321, -6, 270, 170, 371, 286, 17, -265, 163, -95, 302, -71, -256, 12, 318, -57, 116, 205, -49, -300, 270, -108, -42, -360, -374, 378, -326, 109, 208, -400, 230, 136, -10, -232, 360, -24, 108, -368, 112, -145, -70, -343, -166, 76, 86, -235, 46, 255, -383, -384, 378, 278, -88, -399, -6, -412, 34, 80, 124, -105, 123, -372, 70, -265, 252, -320, -234, -37, -293, 284, 236, 39, 351, -314, 172, -301, 282, -148, 372, 367, 332, -4, -134, -163, 20, 261, -129, 138, -369, 362, 55, 136, 20, -275, -75, -109, 247, 101, 260, 345, -381, -259, -381, 377, 250, -136, -325, 186, 81, 91, -247, -345, 123, -333, -112, 220, 8, -200, -44, 35, 224, -401, 228, -140, 190, 229, 175, 43, -73, -315, 2, -43, };
int sigmoid(int x){
    return round(1 / (1 + exp(-1 * x)));
}

#endif